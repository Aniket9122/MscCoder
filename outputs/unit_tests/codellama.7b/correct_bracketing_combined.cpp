#include <iostream>
#include <string>
using namespace std;

bool correct_bracketing(string brackets) {
    // Initialize a stack to store opening brackets
    stack<char> s;

    // Iterate through the string
    for (char c : brackets) {
        // If the current character is an opening bracket, push it to the stack
        if (c == '(') {
            s.push(c);
        }
        // If the current character is a closing bracket, pop from the stack and check if it matches
        else if (c == ')') {
            if (!s.empty() && s.top() == '(') {
                s.pop();
            } else {
                return false;
            }
        }
    }

    // If the stack is not empty, it means there are still opening brackets left, so return false
    if (!s.empty()) {
        return false;
    }

    // If we reach this point, it means that every opening bracket has a corresponding closing bracket, so return true
    return true;
}

#include <chrono>
#include <iostream>
#undef NDEBUG
#include<assert.h>
int main(){
    using clock = std::chrono::steady_clock;
    auto __start = clock::now();
    long long time_taken_ms = 0;
    int tests_passed = 0;
    int total_tests = 0;

    if((correct_bracketing("()"))){ tests_passed++; } total_tests++;

    if((correct_bracketing("(()())"))){ tests_passed++; } total_tests++;

    if((correct_bracketing("()()(()())()"))){ tests_passed++; } total_tests++;

    if((correct_bracketing("()()((()()())())(()()(()))"))){ tests_passed++; } total_tests++;

    if((not (correct_bracketing("((()())))"))){ tests_passed++; } total_tests++;
);
    if((not (correct_bracketing(")(()")))){ tests_passed++; } total_tests++;

    if((not (correct_bracketing("(")));
    assert (not (correct_bracketing("((((")));
    assert (not (correct_bracketing(")")));
    assert (not (correct_bracketing("(()")));
    assert (not (correct_bracketing("()()(()())())(()")));
    assert (not (correct_bracketing("()()(()())()))()")));
    assert (correct_bracketing("()") == true);
    assert (correct_bracketing("(()())") == true);
    assert (correct_bracketing("()()(()())()") == true);
    assert (correct_bracketing("()()((()()())())(()()(()))") == true);
    assert (correct_bracketing("((()())))") == false);
    assert (correct_bracketing(")(()") == false);
    assert (correct_bracketing("(") == false);
    assert (correct_bracketing("((((") == false);
    assert (correct_bracketing(")") == false);
    assert (correct_bracketing("(()") == false);
    assert (correct_bracketing("()()(()())())(()") == false);
    assert (correct_bracketing("()()(()())()))()") == false);
    assert (correct_bracketing("()()()()()") == true);
    assert (correct_bracketing("((((()))))") == true);
    assert (correct_bracketing("((())))(") == false);
    assert (correct_bracketing(")()()))(") == false);
    assert (correct_bracketing("((())") == false);
    assert (correct_bracketing("(()))()") == false);
    assert (correct_bracketing("((()))") == true);
    assert (correct_bracketing(")()()()") == false);
    assert (correct_bracketing(")(") == false);
    assert (correct_bracketing("))))){ tests_passed++; } total_tests++;
)))") == false);
    if((correct_bracketing("((())((())") == false);
    assert (correct_bracketing(")()()))()()()()()")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("))){ tests_passed++; } total_tests++;
(") == false);
    if((correct_bracketing("(())))){ tests_passed++; } total_tests++;
()") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()()())(()") == false);
    if((correct_bracketing("()(()))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("((()))()()))){ tests_passed++; } total_tests++;
()()()())(()") == false);
    if((correct_bracketing("((())))()")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("((") == false);
    assert (correct_bracketing("((()))()(())))") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("()(((())))()))){ tests_passed++; } total_tests++;
((())))") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()()())(()((((())((())))())))") == false);
    if((correct_bracketing(")()()()())){ tests_passed++; } total_tests++;
)()()()())(())()") == false);
    if((correct_bracketing(")((") == false);
    assert (correct_bracketing("(())") == true);
    assert (correct_bracketing(")(((())") == false);
    assert (correct_bracketing("((()(())))") == true);
    assert (correct_bracketing("((()))())(())))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()()())(()((((())((()))))())))") == false);
    if((correct_bracketing("((()(()((())))())))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("))){ tests_passed++; } total_tests++;
)(") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
()()))()()()()()()") == false);
    if((correct_bracketing("((()))))){ tests_passed++; } total_tests++;
(") == false);
    if((correct_bracketing("))){ tests_passed++; } total_tests++;
))((((())))()))") == false);
    if((correct_bracketing("((()))))){ tests_passed++; } total_tests++;
(())))") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()()())(()((((())((())))()()))") == false);
    if((correct_bracketing("()(((()))))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()(()())()") == false);
    if((correct_bracketing(")((()))()())){ tests_passed++; } total_tests++;
)()()()())(())(") == false);
    if((correct_bracketing("") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((()))((()))))){ tests_passed++; } total_tests++;
((())))") == false);
    if((correct_bracketing(")()()()()")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing(")((((()((()))()(()))))") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
()()))()(()()()()()") == false);
    if((correct_bracketing("((()))))){ tests_passed++; } total_tests++;
(()()()()()))()()()())(())()))))") == false);
    if((correct_bracketing("((())))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("()(((())))))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
()()))()()(((()))()(())))()") == false);
    if((correct_bracketing("())(((()))))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing("(((())(((()))()())") == false);
    assert (correct_bracketing(")()()))()()()())){ tests_passed++; } total_tests++;
((()") == false);
    if((correct_bracketing("((()(())((((())))))") == false);
    assert (correct_bracketing(")()()))){ tests_passed++; } total_tests++;
)()()()()()") == false);
    if((correct_bracketing("(((()))()(") == false);
    assert (correct_bracketing(")()()))()()()((()))())){ tests_passed++; } total_tests++;
)(()((((())((())))()()))") == false);
    if((correct_bracketing(")((()))()()())){ tests_passed++; } total_tests++;
)()()(()())()))()())(())(") == false);
    if((correct_bracketing("((()()())()()))()()(((()))()(())))){ tests_passed++; } total_tests++;
())))())(())))") == false);
    if((correct_bracketing(")((())))){ tests_passed++; } total_tests++;
(()()))()()()())(()((((())((())))())()))") == false);
    if((correct_bracketing(")()()()((()))((())))){ tests_passed++; } total_tests++;
)((())))()") == false);
    if((correct_bracketing(")((())((())))())){ tests_passed++; } total_tests++;
))") == false);
    if((correct_bracketing("))){ tests_passed++; } total_tests++;
))((") == false);
    if((correct_bracketing(")()()((())((())))())){ tests_passed++; } total_tests++;
)))()") == false);
    if((correct_bracketing(")(((()))") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()()()()(())))()") == false);
    if((correct_bracketing("((()()())()()()))()()()())){ tests_passed++; } total_tests++;
(()((((())((())))()))))()))()()(((()))()(())))())))())(())))") == false);
    if((correct_bracketing("(((()))()()(())))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("((()))((()())))((())))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
()()))()(()()()())()") == false);
    if((correct_bracketing("(((()(())((((())))))") == false);
    assert (correct_bracketing(")()((()))()(())))()()()")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("((()))((()))))){ tests_passed++; } total_tests++;
((()))))") == false);
    if((correct_bracketing(")((())))){ tests_passed++; } total_tests++;
(()()))()()(())))(())(()((((())(((((()(())((((())))))))))())()))") == false);
    if((correct_bracketing(")()()((())((())))())){ tests_passed++; } total_tests++;
()") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()()(((()))()))(()((((())((())))()()))") == false);
    if((correct_bracketing("()(())()") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing(")())){ tests_passed++; } total_tests++;
((())))()()))") == false);
    if((correct_bracketing(")((())))){ tests_passed++; } total_tests++;
(()()))()()(())))(())(()((((())(((((()(())(((()))))))())))))))))())()))") == false);
    if((correct_bracketing("((()()()))()()()))){ tests_passed++; } total_tests++;
()()()())(()((((())((())))()))))()))()()(((()((()))()()))()()()())(()))()(())))())))())((((())))))))") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
())()()()())(()((((())((())))()()))") == false);
    if((correct_bracketing("((()()())()()()))()()()())){ tests_passed++; } total_tests++;
(()((((())()))))()))()()(((()))()(())))())))())(())))") == false);
    if((correct_bracketing("(((()(())((((()))())))))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()()((()))())))(()((((())((())))()()))") == false);
    if((correct_bracketing("())()()()()")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("((())(()())") == false);
    assert (correct_bracketing("((()()()))()()()))()()()())){ tests_passed++; } total_tests++;
(()((((())((()))))()))))()))()()(((()((()))()()))()()()())(()))()(())))())))())((((())))))))") == false);
    if((correct_bracketing("((()))))){ tests_passed++; } total_tests++;
(()()((()()()))()()()))()()()())(()((((())((())))()))))()))()()(((()((()))()()))()()()())(()))()(())))())))())((((())))))))()()()))()()()())(())()))))") == false);
    if((correct_bracketing("((()))()()))){ tests_passed++; } total_tests++;
()()()())(()(((()(()((())))())))") == false);
    if((correct_bracketing("()(())))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing("((()()())()()()))()()()())){ tests_passed++; } total_tests++;
((()((((())()))))()))()()(((()))()(())))())))())(())))") == false);
    if((correct_bracketing(")()())){ tests_passed++; } total_tests++;
)()()()())(()()())()()))()(()()()())())((((())((())))()()))") == false);
    if((correct_bracketing(")())){ tests_passed++; } total_tests++;
)))))(())((())))())))") == false);
    if((correct_bracketing("))){ tests_passed++; } total_tests++;
()()))()()(()())()((") == false);
    if((correct_bracketing("((()(()))()") == false);
    assert (correct_bracketing("(((())))(()())(())))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing("())()()")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("()((()()()") == false);
    assert (correct_bracketing("((()()()))()()()))()()()())(()((((())((())))()))))){ tests_passed++; } total_tests++;
()))()()(((()((())))()(())))())))())((((())))))))") == false);
    if((correct_bracketing("()(())()())()())){ tests_passed++; } total_tests++;
)()()()()()()))") == false);
    if((correct_bracketing("())()()()())){ tests_passed++; } total_tests++;
()()))()(()()()())())") == false);
    if((correct_bracketing(")()()")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("(()(()(())())()") == false);
    assert (correct_bracketing("(((()))())(") == false);
    assert (correct_bracketing("())(())())(()))()")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("((())()(()(())))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((()))))){ tests_passed++; } total_tests++;
)))") == false);
    if((correct_bracketing("((((((())()()))))))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("()(())(()()(((())))())(()))()(()())")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("()(())(()()(((())))())(()))()(())(())())){ tests_passed++; } total_tests++;
(()))()()())") == false);
    if((correct_bracketing("()(())(()()(((())))())(()))()(()") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((((()))))))){ tests_passed++; } total_tests++;
)())()(()((()(()(())())()())))") == false);
    if((correct_bracketing("(((()))()))((") == false);
    assert (correct_bracketing("())(())())((((())))))){ tests_passed++; } total_tests++;
)))))()") == false);
    if((correct_bracketing("(()(()))()))){ tests_passed++; } total_tests++;
((") == false);
    if((correct_bracketing("((())()(()(()))))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("(()(()(())())())(") == false);
    assert (correct_bracketing("(((()))()))(((())()(()(()))))(") == false);
    assert (correct_bracketing("(()(())(()()(((())))())(()))()(())((") == false);
    assert (correct_bracketing("()(())((())(())())(()))()((()()(())(()()(((())))())(()))()(()()))))())(()))){ tests_passed++; } total_tests++;
()(((((()))()))((") == false);
    if((correct_bracketing("((((((())()())))))))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing("((((()))))))){ tests_passed++; } total_tests++;
)())()(()((()(()(())()))()())))") == false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
(()))()())()") == false);
    if((correct_bracketing("(())(())())((((())))))){ tests_passed++; } total_tests++;
)))))()()(()(()(()(())())())((") == false);
    if((correct_bracketing("((((()))()))((") == false);
    assert (correct_bracketing("()(())(()()()((())))())(()(()(())(()()(((())))())(()))()(())(())()(()())") == false);
    assert (correct_bracketing("())(())())((())(())())((((()))))))){ tests_passed++; } total_tests++;
))))()()(()(()(()(())())())(((((()))))))))))()") == false);
    if((correct_bracketing("(()((") == false);
    assert (correct_bracketing("(()(())(()()(((())))())(()))())(())((") == false);
    assert (correct_bracketing("(())(())())((((())))))))))){ tests_passed++; } total_tests++;
)()()(()(()(()(())())())(((((()))())(") == false);
    if((correct_bracketing("()(())") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
(()))()())(()(()(())())())(()") == false);
    if((correct_bracketing("()(())((()()(((())))())(()))()(()())") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("(((((((())()()))))))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("(((((((((()))()))(((())()()))))))") == false);
    assert (correct_bracketing("(()(()(((()(())())()") == false);
    assert (correct_bracketing("()(())(())()(((())))())(()))()())(())())(()))()(())(())())(()))){ tests_passed++; } total_tests++;
()()())") == false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
(())(())())((((()))))))))))()()(()(()(()(())())())(()") == false);
    if((correct_bracketing("((((((())()())))(()(()))()))(()))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
()()())()") == false);
    if((correct_bracketing("()(((()(()(())())())") == false);
    assert (correct_bracketing("()(())(()()(((())))())(()))()((()())") == false);
    assert (correct_bracketing("()(())(()()()((())))((((((((())()()))))))))(()(()(())(()()(((())))())(()))()(())(())()(()())") == false);
    assert (correct_bracketing("()()())(()()(((())))())(()))()(()())") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("(()(()(((()(()))()") == false);
    assert (correct_bracketing("()((((()(()(())())())") == false);
    assert (correct_bracketing("()(()(()(((()(()(())())())())())())") == false);
    assert (correct_bracketing("())(())((()(())(()()(((())))())(()))())(())(())(()))()())()") == false);
    assert (correct_bracketing("(((") == false);
    assert (correct_bracketing("()((()())") == false);
    assert (correct_bracketing("(()(())(()()(((())))())((()))()(())((") == false);
    assert (correct_bracketing("(())(())())(((((())()(()(())))(())))))))))))()()(()(()(()(())())())((") == false);
    assert (correct_bracketing("())(())())())()") == false);
    assert (correct_bracketing("(())(())()((((((())()())))))))(((((())()(()(())))(()))))))))){ tests_passed++; } total_tests++;
)))()()(()(()(()(())())())((") == false);
    if((correct_bracketing("((((())))()())(())())(()))){ tests_passed++; } total_tests++;
()())(()(()(())())())(()((") == false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
((((())))))))))))()") == false);
    if((correct_bracketing("(()(()(())())()(") == false);
    assert (correct_bracketing("((((()))())))((") == false);
    assert (correct_bracketing("((((((())()())))(()(((()(()))()))(()))()))(()))") == false);
    assert (correct_bracketing("()(())((()(()(()(((()(())())()()(((())))())(()))()(()())") == false);
    assert (correct_bracketing("((((())))()())(())())(()))()())(()())(())())())()(()(())())())(()((") == false);
    assert (correct_bracketing("((((()))))()())(())())(()))()())(()())(())())){ tests_passed++; } total_tests++;
())()(()(())())())(()((") == false);
    if((correct_bracketing("((((((())()())))(()(((()(()))()))(()") == false);
    assert (correct_bracketing("(()(()))()))(()(())(()()(((())))())((()))()(())(((") == false);
    assert (correct_bracketing("(((((") == false);
    assert (correct_bracketing("())(())(((((()))()))(())(()))()())(()(()(())())())(()") == false);
    assert (correct_bracketing("((()(()(((()(())())()())())())(") == false);
    assert (correct_bracketing("()(())(())()(((())))())(()))()())(())())(()))((()(()(())())())())(()))()()())") == false);
    assert (correct_bracketing("()(())((()()(((()()())") == false);
    assert (correct_bracketing("((((((())()())(()(()))()))(()))))") == false);
    assert (correct_bracketing("()((((()(()(())())()(()(()(())())())") == false);
    assert (correct_bracketing("(()(()))()))(()(())(()()(((())))()()((()))()(())(((") == false);
    assert (correct_bracketing("((((()))))()())((())(())())((((()))))))))))()))())(()))()())(()())(())())())()(()(())())())(()((") == false);
    assert (correct_bracketing("())(())())((((()))))))))){ tests_passed++; } total_tests++;
))))()") == false);
    if((correct_bracketing("(((((((())(((((((((())()())(()(()))()))(()))))))))))))()()))){ tests_passed++; } total_tests++;
))))") == false);
    if((correct_bracketing("((((((())()()((()(()(((()(())())()())())())()))(()(()))()))(()))") == false);
    assert (correct_bracketing("()(((()(()(())())()()(()))") == false);
    assert (correct_bracketing("())(())())(()))()())") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
(()))()())(()(()(()())(())())(()))()())(()(()(())())())(())())())(()") == false);
    if((correct_bracketing("(()((())(())())((((())))))))){ tests_passed++; } total_tests++;
)))()()(()(()(()(())())())((())(()()(((())))())((()))()(())((") == false);
    if((correct_bracketing("((((()((((()))()))(((())()())))))(((((((())()())))))))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((()()(((()(()(())())()))()(()(()))))") == false);
    assert (correct_bracketing("(())(())())((((()))))))){ tests_passed++; } total_tests++;
))))()()(()(()(()())())())((") == false);
    if((correct_bracketing("(())(())()((((((())()())))))((") == false);
    assert (correct_bracketing("()(())(()()(((())))())(()))())(())())(()))){ tests_passed++; } total_tests++;
()())()(()") == false);
    if((correct_bracketing("((((((()(((()(()(())())()()(()))())()())))))))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("()(())(()()(((())))())(((()))()))(((()))()(())(())())(()))){ tests_passed++; } total_tests++;
()()())") == false);
    if((correct_bracketing("()(())(()()()((())))())(()(()(())(()()(((())))())(()))()(())(())()(()()))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("(((()()))())))){ tests_passed++; } total_tests++;
((") == false);
    if((correct_bracketing("(((((((((((())()())))(()(()))()))(()))") == false);
    assert (correct_bracketing("()()())(()()(((())))())(())))()(()())") == false);
    assert (correct_bracketing("())()))){ tests_passed++; } total_tests++;
)))))()()(()(()(()(())())())(()") == false);
    if((correct_bracketing("(())(())())()((((()(()(())())()(()(()(())())())(((((())()(()(())))(())))))))))){ tests_passed++; } total_tests++;
))()()(()(()(()(())())())((") == false);
    if((correct_bracketing("(((()))())((())()(()(())))(") == false);
    assert (correct_bracketing("((((((((())()())))))))(()))())(") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("(((()(((((((()(((()(()(())())()()(()))())()())))))))") == false);
    assert (correct_bracketing("()((((()(()(())())()(()(()(())())())(((((") == false);
    assert (correct_bracketing("((((()((((()))()))(((())(((((((())()())()(())(()()(((())))())(()))()(()())))))))") == false);
    assert (correct_bracketing("(())((()(()(((()(())())()())())())((())()((((((())()())))))((") == false);
    assert (correct_bracketing("(((((((())()())))))))") == false);
    assert (correct_bracketing("((()()())(()(((((((((()))()))(((())()()))))))))))") == false);
    assert (correct_bracketing(")(((()()))())))((") == false);
    assert (correct_bracketing("((()()(((()(()(())((()(()(())())()))()))()(()(()))))") == false);
    assert (correct_bracketing("((((((((((())()())))(()(((()(()))()))(()))()))(()))()))())))((") == false);
    assert (correct_bracketing("((((()((((()))()))(((())()()))))(())()())))))))") == false);
    assert (correct_bracketing("(()(()())())()") == true);
    assert (correct_bracketing("((((((") == false);
    assert (correct_bracketing("()(()((()(((()(()(())())())())())())") == false);
    assert (correct_bracketing("()(((((()(())((()(()(()(((()(())())()()(((())))())(()))()(()()))(()(())())()(()(()(())())())") == false);
    assert (correct_bracketing("((()(()((()(())())()())())())(") == false);
    assert (correct_bracketing("((()))))))))") == false);
    assert (correct_bracketing("()(())(()()()((())))((((((((())()()))))))))(()(()(())(()()(((())))())(()))()(())(())()((()())") == false);
    assert (correct_bracketing("(()((((()(()(())())()(()(()(())())())") == false);
    assert (correct_bracketing("(()(())((()()(((()()())(((((())()())(()(()))()))(()))))") == false);
    assert (correct_bracketing("())()(()())") == false);
    assert (correct_bracketing("(((((((())()()))))))))") == false);
    assert (correct_bracketing(")()((((()))()))(()") == false);
    assert (correct_bracketing("(((()))))))))") == false);
    assert (correct_bracketing("(((((((())(())())((((()))))))))))()()(()(()(()())())())(((())()())))))))") == false);
    assert (correct_bracketing("(()(())((()()(((()()((((((()(((()(()(())())()()(()))())()())))))))())(((((())()())(()(()))()))(()))))") == false);
    assert (correct_bracketing("())(())())((((()))))))))))") == false);
    assert (correct_bracketing("(()(()") == false);
    assert (correct_bracketing("((((((((((())()()))))))))((((())()()))))))))") == false);
    assert (correct_bracketing("())(())())(()))()())(()()()())(()()(((())))())(())))()(()())(()(())())())(()") == false);
    assert (correct_bracketing("(((((())()())))))))") == false);
    assert (correct_bracketing("((((((())()())))(()(()))()))(()((((((())()()((()(()(((()(())())()())())())())())(())())((((())))))))))))(()(()))()))(())))") == false);
    assert (correct_bracketing("(()(((()()(((()(()(())())()))()(()(()))))(())(())())((((())()))))))))){ tests_passed++; } total_tests++;
()()(()(()(()(())())())((())(()()(((())))())((()))()(())((") == false);
    if((correct_bracketing("((((((((((())()())))(()(((()(()))()))(()))()))(()))()))())))){ tests_passed++; } total_tests++;
(((((((())()())))(()(()))()))(()((((((())()()((()(()(((()(())())()())())())())())(())())((((())))))))))))(()(()))()))(())))(") == false);
    if((correct_bracketing("())(())(((((()))()))(()())(())())((((())))))){ tests_passed++; } total_tests++;
))))))()(()))()())(()(()(())())())(()") == false);
    if((correct_bracketing("(()(())(())())()") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((())()(()(())))()((((()(()(())())())") == false);
    assert (correct_bracketing("(((()))())") == true);
    assert (correct_bracketing("())(()))))()()(()(()(()(())())())((()") == false);
    assert (correct_bracketing("((((()((((()))()))(((())()())))))((((((((())(())())((((()))))))))))()()(()(()(()())())())(((())()())))))))){ tests_passed++; } total_tests++;
((((((())()())))))))") == false);
    if((correct_bracketing("(())(())())()((((()(()(())((()()(((())))())(()))()(()())(()(())())())(((((())()(()(())))(())))))))))){ tests_passed++; } total_tests++;
))()()(()(()(()(())())())((") == false);
    if((correct_bracketing("()())(()))){ tests_passed++; } total_tests++;
()") == false);
    if((correct_bracketing("()())(())(((((()))()))(()())(())())((((())))))){ tests_passed++; } total_tests++;
))))))()(()))()())(()(()(())())())(())(((((()))()))(()())(())())((((())))))))))))()(()))()())(()(()(())())())(()") == false);
    if((correct_bracketing("(()(())((()()(((()()((((((()(((()(()(())())()()(()))())()())))))))())(((((())()())((((()((((()))()))(((())(((((((())()())()(())(()()(((())))())(()))()(()()))))))))(()(()))()))(()))))") == false);
    assert (correct_bracketing("()(())((()()(((())))(())(()))()(()())") == false);
    assert (correct_bracketing("(((())((()(()(((()(())())()())())())()((") == false);
    assert (correct_bracketing("())()))))))()(()(())())())(()") == false);
    assert (correct_bracketing("())(())())(())(())())((((())))))))((())()(()(())))()((((()(()(())())()))))()()(()(()(()(())())())(()") == false);
    assert (correct_bracketing("((())()(()(())))()((((()(()((()(()(((()(())())()())())())") == false);
    assert (correct_bracketing("(()(())(()()(((())))())(())()()(())((") == false);
    assert (correct_bracketing("(((((())()()))))))))") == false);
    assert (correct_bracketing("(()(()(())())()((((()()))())))((") == false);
    assert (correct_bracketing("((((()(((((((())()()))))))))()))((") == false);
    assert (correct_bracketing("(()((((((((())()())))(()(((()(()))()))(()))()))(()))()))())))(((((((())()())))(()(()))()))(()((((((())()()((()(()(((()(())())()())())())())())(())())((((())))))))))))(()(()))()))(())))(") == false);
    assert (correct_bracketing("(((()((((((())()())))(()(((()(()))()))(()))()))(()))()))())))((") == false);
    assert (correct_bracketing(")(()(()") == false);
    assert (correct_bracketing("((((((())()()))))()))(()))") == false);
    assert (correct_bracketing("(()((())()(()(())))()((((()(()(())())())(()())())()") == false);
    assert (correct_bracketing("((((()((((((())()())))(()(((()(()))()))(()))()))(()))()))())))(()()(((())))())(()))()(())(())())(()))()()())") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("()((((()(()(())())()(()(()))()))(()(())(()()(((())))())((()))()(())((((()(()(())())())(((((") == false);
    assert (correct_bracketing("(()(()))()))(()(())(()()(((()))))())((()))()(())(((") == false);
    assert (correct_bracketing("((((()((((()))()))(((())(((((((())()())()(())(()()(((())))())(()))()(()))))))") == false);
    assert (correct_bracketing("()((((()(()(())())()(()(()(()))()(())((((()(()(())())())((((())))))))))))()") == false);
    assert (correct_bracketing("())(())())((())(())())((((()))))))))))()()(()(()(()(())())())((((()))))))))()") == false);
    assert (correct_bracketing("()(())(())()(((())))((()(())((()()(((()()((((((()(((()(()(())())()()(()))())()())))))))())(((((())()())(()(()))()))(())))))(()))()()())") == false);
    assert (correct_bracketing("(()((((()((((((()))()))(()(())())()(()(()(())())())") == false);
    assert (correct_bracketing("(((()))())(((()(()))()))(()(())(()()(((())))()()((()))()(())(((((((())()())))))))(((())()(()(()))))(") == false);
    assert (correct_bracketing("((((((())()()(()(())(()()(((())))())(()))()(())(())())((()))()(()())(()(()((((()(())())()())())())()))(()(()))()))(()))") == false);
    assert (correct_bracketing("(((()))())(((()(()))()))(()(())(()()(((())))()()((())()(()(())))()((((()(()((()(()(((()(())())()())())())((()))()(())(((((((())()())))))))(((())()(()(()))))(") == false);
    assert (correct_bracketing("()(((()(()(())())()()(())))") == false);
    assert (correct_bracketing("(())(())())((((()))))))))))()()(()(()(()(())())())(((((()))())") == false);
    assert (correct_bracketing(")()((((()))(((((()))))()())((())(())())((((()))))))))))()))())(()))()())(()())(())())())()(()(())())())(()(()))(()") == false);
    assert (correct_bracketing("((((())))()())(())())(()))()())(()()()(())())())(()((") == false);
    assert (correct_bracketing("((((((((((())()())))((()(()))()))(()(())(()()(((())))()()((()))()(())(((()(((()(()))()))(()))()))(()))()))())))((") == false);
    assert (correct_bracketing("(((()))())((())())(()(())))(") == false);
    assert (correct_bracketing("((())()(()(())))()((((()(()((()(()(((()(())())()())())()()(())((()()(((())))(())(()))()(()()))") == false);
    assert (correct_bracketing("(()((((()(()(())())()(()())(())())(()))()())(()()()())(()()(((())))())(())))()(()())(()(())())())(()(()(())())())") == false);
    assert (correct_bracketing("((()(()((()(())()(") == false);
    assert (correct_bracketing("(()(((") == false);
    assert (correct_bracketing("((((((())()()))))(()(((()(()))()))(()))()))(()))") == false);
    assert (correct_bracketing("((((())))()())(())())(()))()())(()()())(())())())(()((") == false);
    assert (correct_bracketing("())(())())(()))()())(()(()(()())(())())(()))()())(()(()(())(())())(())())())(()") == false);
    assert (correct_bracketing("())(())())(()))()(())(()(()(()())(())())(()))()())(()(()(())())())(())())())(()") == false);
    assert (correct_bracketing("((((((((((())()()))))))))((((())()())))))))()") == false);
    assert (correct_bracketing("(((()((") == false);
    assert (correct_bracketing("(((()))())(((()(()))()))(()(())(()()(((())))()()((())()(()(())))()((((()(()((()(()(((()(())())()())())())((()))()()())(((((((())()())))))))(((()))()(()(()))))(") == false);
    assert (correct_bracketing(")((((((())()())))))))(") == false);
    assert (correct_bracketing("()(())(()()(((())))())(())))()(())(())())(()))()()())") == false);
    assert (correct_bracketing("(())(())())(((((())()(()(())))((())))))))))))()()(()(()(()(())())())((") == false);
    assert (correct_bracketing("())(())())((()(((()(()(())())()()(())))))))()()()") == false);
    assert (correct_bracketing("(()(((()()(((()(()(())())()))()(()(()))))(())(())())((((())()))))))))()()(()(()(()(())())())(()(((())))())((()))()(())((") == false);
    assert (correct_bracketing("((((())))()())(())())(()))()())(()(()(())())((()((") == false);
    assert (correct_bracketing("(())(())())()((((()(()(())())()(()(()(())())())(((((()))()(()(())))(())))))))))))()()(()(()(()(())())())((") == false);
    assert (correct_bracketing("((((((())()())))(()(((()(()))()))(()))()))(())()") == true);
    assert (correct_bracketing("(((()") == false);
    assert (correct_bracketing("((()(()((()()(()))(())()(((())))())(()(((()))))))))))()())(())())(()))()(())(())())(()))()()())(())())()())())())(") == false);
    assert (correct_bracketing("((((())))()())(())())(()))()())(()())(())())()()()(()(())())())){ tests_passed++; } total_tests++;
(()((") == false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
)()()())()") == false);
    if((correct_bracketing("()(())(()()()((())))((((((((())()()))))))))(())(()(())(()()(((())))())(()))()(())(())()((()())") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((((((())()()))))()))()())){ tests_passed++; } total_tests++;
)") == false);
    if((correct_bracketing("((())()(()(()))())") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((((()))))))){ tests_passed++; } total_tests++;
)())()(()((()(()(())()))()())((((())))()())(())())(()))()())(()(()(())())())(()(())") == false);
    if((correct_bracketing("()(())((()()(((()))()(()))(())(()))()(()())") == false);
    assert (correct_bracketing("((((((())()())))(()(((()(())(()((())(())())((((()))))))))))()()(()(()(()(())())())((())(()()(((())))())((()))()(())(()()))(()") == false);
    assert (correct_bracketing("(((((((((())()()))))()))(())))()())(()(((((((((()))()))(((())()()))))))))))") == false);
    assert (correct_bracketing("((()(()((()()(()))(())()(((())))())(()(((()))))))))))){ tests_passed++; } total_tests++;
()())(())())(())(") == false);
    if((correct_bracketing("(()(()(())())()((((()())))())))((") == false);
    assert (correct_bracketing("())(())())(()))){ tests_passed++; } total_tests++;
()())(()(()(((((((())()())))))))))())(())())(()))()())(()(()(())(())())(())())())(()") == false);
    if((correct_bracketing("()(()(()((((((((((())()())))))))(()))())((()(()(())())())())())())") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((((()((((()))()))(((())()()))))(())()(())))))){ tests_passed++; } total_tests++;
))") == false);
    if((correct_bracketing("(()(((()(()(())())()()(()))") == false);
    assert (correct_bracketing("()(())((()(()()())(()(((()(())())()()(((())))())(()))()(()())") == false);
    assert (correct_bracketing("((())()(()(()))()))") == false);
    assert (correct_bracketing("())(())((()(())(()()(((())))((()((((()(()(())()))()(()(()(())())()))(())(()))()())()") == false);
    assert (correct_bracketing("()()())(()()(()(())((()(()()())(()(((()(())())()()(((())))())(()))()(()())((())))())(()))()(()())") == false);
    assert (correct_bracketing("(())(())())((((()))))))))))()()(()(()(()(())())())(((((()))()))(") == false);
    assert (correct_bracketing("((((((())()())))(()(((()(()))(((((())))()())(())((((((())()())))(()(((()(())(()((())(())())((((()))))))))))()()(()(()(()(())())())((())(()()(((())))())((()))()(())(()()))(()())(()))()())(()(()(())())((()(()))(()))()))(())()") == false);
    assert (correct_bracketing("((((()))))))))((((())()()))))()))()()))") == false);
    assert (correct_bracketing("()(((((()(())((()(()(()(((()(())())()()((()(()()))(()(())())()(()(()(())())())") == false);
    assert (correct_bracketing("((((((())()())))(()(((()(()))()))(()(((())()())(()(()((()(()((()(())()())()))(()))))") == false);
    assert (correct_bracketing("((((((()()(()())))))()))()()))") == false);
    assert (correct_bracketing("()(()(()((((((((((())()())))))))()()))())((()(()(())())())())())())") == false);
    assert (correct_bracketing("(())(())())()((((()(()(())())()(()(()(())())())(((((())()(()(())))(())))))))))))()()(()(()(()()())())())((") == false);
    assert (correct_bracketing("())(())())(()))()())(()(()(((((((())()())))))))))())(())())(()))()()))(()(()(())(())())(())())())(()") == false);
    assert (correct_bracketing("(((((((())()())))))))(((((())()())))))))") == false);
    assert (correct_bracketing("((((((())(()())))(()(((()(()))()))(()") == false);
    assert (correct_bracketing("(()((((()(()(())())()(()())(())())(()))()())(()()(()())(()()(((())))())(())))()(()())(()(())())())(()(()(())())())") == true);
    assert (correct_bracketing("((((()((((()))()))(((())(((((((())()())()(())(((()(())(()()(((())))())((()))()(())))))))") == false);
    assert (correct_bracketing("()(())((()(()()())(()(((()(())())()()((((())))())(()))()(()())") == false);
    assert (correct_bracketing("(()(()))()))(()(())(()()(((())())(())())((((()))))))))))))()))())((()))()(())(((") == false);
    assert (correct_bracketing("(((()(())(()()(((())))())(()))()(())(()") == false);
    assert (correct_bracketing("()(((()(())(()()(((())))())((()))()(())((()())") == false);
    assert (correct_bracketing("(())(())())()((((()(()(())())()(()(()(()(())((())(())())(()))()((()()(())(()()(((())))())(()))()(()()))))())(()))()(((((()))()))((())())())(((((()))()(()(())))(())))))))))))()()(()(()(()(())())())((") == false);
    assert (correct_bracketing(")(()((()") == false);
    assert (correct_bracketing("(((((((())(())())((((()))))))))))()()(()(()(()())())())(((())()()((())()(()(())))()((((()(()((()(()(((()(())())()())())()()(())((()()(((())))(())(()))()(()())))))))))") == false);
    assert (correct_bracketing("(()(())()))(((((()))))()())(())())(()(())(()()(((())))())(()))()(())(((()))()())(()())(())())())()(()(())())())(()(())()") == false);
    assert (correct_bracketing("())(())())((()(((()(()((())())()()(())))))))()()()") == false);
    assert (correct_bracketing("(((((((())()()))((((((())()())))(()(((()(()))()))(()))()))(())())))))") == false);
    assert (correct_bracketing("())(())())(()))()())(()(()(((((((()))()())))))))))())(())())(()))((((((((())(((((((((())()())(()(()))()))(()))))))))))))()()))))){ tests_passed++; } total_tests++;
)))())(()(()(())(())())(())())())(()") == false);
    if((correct_bracketing("()(()(()((((((((((())()())))())(())((()(())(()()(((())))((()((((()(()(())(()))()(()(()(())())()))(())(()))()())()))))()()))())((()(()(())())())())())())") == false);
    assert (correct_bracketing("(((())))))))(((())") == false);
    assert (correct_bracketing("((((()((((()))()))(((())((()(())())))))(((((((())()())))))))") == false);
    assert (correct_bracketing("()(()(()(((()((((((())()())))))))()()))())((()(()(())())())())())())") == false);
    assert (correct_bracketing("(((()))(()(())))(") == false);
    assert (correct_bracketing("(())(())())((((()))))))))){ tests_passed++; } total_tests++;
))()()(()(()(()(())())())(()(())(()()(((())))())(()))()(())(((((((()))())") == false);
    if((correct_bracketing("(()(())(()()(((())))())((()))()(())((((((()((((()))()))(((())(((((((())()())()(())(((()(())(()()(((())))())((()))()(())))))))") == false);
    assert (correct_bracketing("((()())(())())(()))()())(()(()(((((((()))()())))))))))())(())())(()))((((((((())(((((((((())()())(()(()))()))(()))))))))))))()())))))))){ tests_passed++; } total_tests++;
())(()(()(())(())())(())())())(()(()(((()(())())()())())())(") == false);
    if((correct_bracketing("((()(()((()()(())()(())(()()(((())))())(())))()(())(())())(()))()()()))(())()(((())))())){ tests_passed++; } total_tests++;
(()(((()))))))))))()())(())())(())(") == false);
    if((correct_bracketing("(())(())())()((((()(()(())())()(()(()(())())())((") == false);
    assert (correct_bracketing("(())(())())((((())))(()(())))))))()()(()(()(()(())())())(((((()))())") == false);
    assert (correct_bracketing("(((()))())((()(())((()()(((())))())(()))()(()())())()(()(())))(") == false);
    assert (correct_bracketing("((((((())()()))))(()(((()(()))()))(()))())))(()))") == false);
    assert (correct_bracketing("(((()))()))(") == false);
    assert (correct_bracketing("())(())())(()))){ tests_passed++; } total_tests++;
()(())(()(()(()())(())()())(())((()(())(()()(((())))((()((((()(()(())()))()(()(()(())())()))(())(()))()())())(()))()())(()(()(())())())(())())())(()") == false);
    if((correct_bracketing("(()(())()))((((()()))))()())){ tests_passed++; } total_tests++;
(())())(()(())(()()(((())))())(()))()(())(((()))()())(()())(())())())()(()(())())())(()(())()") == false);
    if((correct_bracketing("((()") == false);
    assert (correct_bracketing("((((())))()())(())())((((((((((((())()()))))))))((((())()())))))))))){ tests_passed++; } total_tests++;
))()())(()()()(())())())(()((") == false);
    if((correct_bracketing("((()(((()(()(())()))(((((())()())))(()(((()(()))(())(())())((((()))))))))))))())){ tests_passed++; } total_tests++;
))(()") == false);
    if((correct_bracketing("(())((())())((((()))))))){ tests_passed++; } total_tests++;
))))()()(()(()(()())())())((") == false);
    if((correct_bracketing("(()(())(())(())())()()())()(()()(((()()())(((((())()())(()(()))()))(()))))") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((((((())()()))))(()((()())))(()))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("(((()((((()(()(())())()(()(()))()))(()(())(()()(((())))())((()))()(())((((()(()(())())())((((())()(()(())))") == false);
    assert (correct_bracketing("((((((())()())))(()(((()((()))()))(()") == false);
    assert (correct_bracketing("((()(((()(()(())()))((()") == false);
    assert (correct_bracketing("(((((((((((())()())))))))(((((())()())))))))((())()())))(()(((()((()))()))(()") == false);
    assert (correct_bracketing("())(())(((((()))()))(()())(())())())(())((()(())(()()(((())))((()((((()(()(())()))()(()(()(())())()))(())(()))()(())()((((())))))))))))()(()))()())(()(()(())())())(()") == false);
    assert (correct_bracketing("())(())())(())()()())()") == false);
    assert (correct_bracketing("())(())())(()))((((((())()())))(()(((()((()))()))(()()())(()(()(())())())(()") == false);
    assert (correct_bracketing("((())((())())((((()))))))))))()()(()(()(()())())())((((())()((((((())()())))))((") == false);
    assert (correct_bracketing("((((((())()())))(()(((()(())))()))(()))()))(())()") == false);
    assert (correct_bracketing("()(())(()()(((()))))))()(()())") == false);
    assert (correct_bracketing("(((((((())()()))((((((())()()((((((((((())()())))(()(((()(()))()))(()))()))(()))()))())))(((()(()(())())()()))(()(((()(()))()))(()))()))(())())))))") == false);
    assert (correct_bracketing("((((())))))))())()(()((()(()(())()))()())((((())))()())(((()(()(((()(()))()))())(()))()())(()(()(())())())(()(())") == false);
    assert (correct_bracketing("(())((()(()(((()(())())()())())())((())()((((((())(()())))))((") == false);
    assert (correct_bracketing("(()(())(()()((((())))())(()))())(())((") == false);
    assert (correct_bracketing("((((((())()())(()))))") == false);
    assert (correct_bracketing("(((()))())))((") == false);
    assert (correct_bracketing("())(())((()(())(()()(((()))))())(()))())(())(())(()))()())()") == false);
    assert (correct_bracketing("(())((())(())((()(())(()()(((()))))())(()))())(())(())(()))()())()))())((((())))))))))())((") == false);
    assert (correct_bracketing("())(())())(()))()()())())(()") == false);
    assert (correct_bracketing("((()((())(())())(()))()())") == true);
    assert (correct_bracketing("((((((((((())()())))((()(()))())(())(())()((((((())()())))))))(((((())()(()((())(())())((())(())())((((()))))))))))()()(()(()(()(())())())(((((()))))))))))()))))(())))))){ tests_passed++; } total_tests++;
))))))()()(()(()(()(())())())(()(()(())(()()(((())))()()((()))()(())(((()(((()(()))()))(()))()))(()))()))())))((") == false);
    if((correct_bracketing("(()(())(()()(((())))())((()))()(())((((((()((((()))()))(((())((((((((((())))())((()))()(())))))))") == false);
    assert (correct_bracketing("(((()))())((()(())(())(())())(()))()())(()(()(()())(())())(()))()())(()(()(())())())(())())())(())))()(()())())()(()(())))(") == false);
    assert (correct_bracketing("(((()))())((()(())((()()(((())))())(())))()(()())())()(()(())))(") == false);
    assert (correct_bracketing("()()") == true);
    assert (correct_bracketing("((((())))))))())){ tests_passed++; } total_tests++;
()(()((()(()(()))") == false);
    if((correct_bracketing("()(((()(()((((((((())()()))))(()((()())))(()))))()))))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("(((((()))())((())()(()(())))(()(()((()()(()))(())()(((())))())(()(((()))))))))))){ tests_passed++; } total_tests++;
()())(())())(()))()(())(())())(()))()()())(())())()())())())(") == false);
    if((correct_bracketing("(((()(())(()()(((())))())(()))()(())))(()))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("((((((())()())))(()(()))()))((()))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("((()(()(((((()((((()))()))(((())(((((((())()())()(())(((()(())(()()(((())))())((()))()(())))))))(()(())())()())())())(") == false);
    assert (correct_bracketing("(((()))())(())((()(())(()()(((()))))())(()))())(()()(())(()))()())()())") == false);
    assert (correct_bracketing("(())((())(())((()(())(()()(((()))))())(()))())(())(())(()))())())()))())((((())))))))){ tests_passed++; } total_tests++;
))())((") == false);
    if((correct_bracketing("()(())(())()(((())))())(()))){ tests_passed++; } total_tests++;
()())(())())(())())()(())(())())(()))()()())") == false);
    if((correct_bracketing("((((()))))))){ tests_passed++; } total_tests++;
)())()(()((()(()(())()))()())((((())))()())(())())(()))()())(()(()(())())(())(()(())") == false);
    if((correct_bracketing("(()(()))())")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("(())(())())((((()())))))){ tests_passed++; } total_tests++;
))))()()(()(()(()(())())())(((((()))()))(") == false);
    if((correct_bracketing("(((((((()(((())()())))))))") == false);
    assert (correct_bracketing("()(())))(()()(((()))))))){ tests_passed++; } total_tests++;
()(()())") == false);
    if((correct_bracketing("(())((()(()(((()(())())()())())())((())()((((((())(()()))()))((") == false);
    assert (correct_bracketing("((())()())") == true);
    assert (correct_bracketing("((((()))))))))((((())()()))))()))()()))){ tests_passed++; } total_tests++;
)(") == false);
    if((correct_bracketing(")(()(())(()()(((())))())(())))){ tests_passed++; } total_tests++;
()(())(())())(()))()()())((()()))())))((") == false);
    if((correct_bracketing("((()())(())())(()))()())){ tests_passed++; } total_tests++;
(()(()(((((((()))()())))))((())()(()(())))()((((()(()((()(()(((()(())())()())())()()(())((()()(((())))(())(()))()(()()))))))())(())())(()))((((((((())(((((((((())()())(()(()))()))(()))))))))))))()())))))))())(()(()(())(())())(())())())(()(()(((()(())())()())())())(") == false);
    if((correct_bracketing("((((()((((()))()))(((())(((((((())()())()(())(((()((())(())())())()))(()()(((())))())((()))()(())))))))") == false);
    assert (correct_bracketing("((((((()())(()())))))()))()()))") == false);
    assert (correct_bracketing("(((((((())()(()((()())))))))))(((((())()())))))))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("((()(()(((((()((((()))()))(((())(((((((())()())()(())(((()(())(()()(((())))())((()))()(())))))))(()(())())(((((((())()()))((((((())()())))(()(((()(()))()))(()))()))(())()))))))(") == false);
    assert (correct_bracketing("((())((())())((((())))()()(()(()(()())())())((((())()((((((())()())))))((") == false);
    assert (correct_bracketing("())(())((()(())(()()(((())))((()((((()(()(())()))()(()(((())())()))(())(()))()())()") == false);
    assert (correct_bracketing("()(())(()()(((())))())(())))()(())(())(())(()))()()())") == false);
    assert (correct_bracketing("(()(())(()()(((())))())(()))()(())(((") == false);
    assert (correct_bracketing("((((()))()))()(") == false);
    assert (correct_bracketing(")(())(()") == false);
    assert (correct_bracketing("(()()()))()))(()(()((((()(()(())())()(()(()(())())())(())(()()(((())())(())())((((()))))))))))))()))())((()))()(())(((") == false);
    assert (correct_bracketing("())(())())(()))((((((())()())))(()(((()((()))(()(()(())())()(()))(()()())(()(()(())())())(()(())(())())((((()))))))))))()()(()(()(()(())())())(((((()))())(") == false);
    assert (correct_bracketing("(((((((())(())())((((()))))))))))()()(()(()(()())())())(((())())()))))))))") == false);
    assert (correct_bracketing("(()((((()(()(())())()(()(())(())((()(())(()()(((())))())(()))())(())(())(()))()())()()(())())())") == false);
    assert (correct_bracketing("(())(((()(()(())())()))())((((()))))))))))()()(()(()(()(())())())((") == false);
    assert (correct_bracketing("()(())(()()(((())))())(())))()((()())") == false);
    assert (correct_bracketing("(())(())())((((())))(()(()))))))))()()(()(()(()(())())())(((((()))())") == false);
    assert (correct_bracketing("(((((((())(())())((((()))))))))))()()(()(()(()())())())(((())())()))))))))((((((())()())))()))((())") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("()(()(()((((((()((((((())()())))(()(((()(()))()))(()))()))(()))()))())))((()((((((())()())))))))()()))())((()(()(())())())())())){ tests_passed++; } total_tests++;
())") == false);
    if((correct_bracketing("(()(())(()()((((())))())(())))())(())((") == false);
    assert (correct_bracketing("()(())(()()(((()))))))()((()())") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("(()(()))()))){ tests_passed++; } total_tests++;
(()(())(()()(((())())(())())((((()))))))))))))()))())((()))()(())(((((((((())(()())))(()()))(()") == false);
    if((correct_bracketing("(()()(())())((((()))))))){ tests_passed++; } total_tests++;
))))()()(()(()(()(())())())(()))())") == false);
    if((correct_bracketing("(()(())(()()(((())))())((()))()(())(())(((((()))()))(()())(())())())(())((()(())(()()(((())))((()((((()(()(())()))()(()(()(())())()))(())(()))()(())()((((())))))))))))()(()))){ tests_passed++; } total_tests++;
()())(()(()(())())())(()())((") == false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
((((())))))((((((()()(()())))))()))()()))))))))()") == false);
    if((correct_bracketing(")(()(()()(())") == false);
    assert (correct_bracketing("((((())))))((((()))))))){ tests_passed++; } total_tests++;
)())()(()((()(()(())()))()())((((())))()())(())())(()))()())(()(()(())())(())(()(())))())()(()((()(()(())()))()())((((())))()())(((()(()(((()(()))()))())(()))()())(()(()(())())())(()(())") == false);
    if((correct_bracketing("(())(())())((())(())())((((())))))){ tests_passed++; } total_tests++;
)))))()()(()(()(()(())())())((((()))))))))()") == false);
    if((correct_bracketing("(((((())())())))))){ tests_passed++; } total_tests++;
))") == false);
    if((correct_bracketing("(())(())())(((()))())")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("(()(())(()()(((())))())((()))()(())(())(((((()))()))(()())(())())())(())((()(())(()()(((())))((()((((()(()(())()))()(()(()(())())()))(())(()))()(())()((((())))))))))))()(()))){ tests_passed++; } total_tests++;
()())(()(()(())()(()())((") == false);
    if((correct_bracketing("(())(())())()((((()(()(())())()(()(()(())())())(((((()))()(()(())))(()))))))))){ tests_passed++; } total_tests++;
)))()()(()(()()())(()(())())())((") == false);
    if((correct_bracketing("(()(()))()))){ tests_passed++; } total_tests++;
(()(())(()()(((())())(())())((((()))))))))))))()))())((()))(((()()))())))(()()(())((((())(())())()((((()(()(())())()(()(()(())())())(((((()))()(()(())))(())))))))))))()()(()(()()())(()(())())())((") == false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
(())") == false);
    if((correct_bracketing("((()()))()))){ tests_passed++; } total_tests++;
((") == false);
    if((correct_bracketing("(())(())())(((((())()(()(())))(())))))){ tests_passed++; } total_tests++;
))))))()()((()(()(()(())())())((") == false);
    if((correct_bracketing("(()(())((()()(((()()((((((()(((()(()(())())()()(()))())()())))))))())(((((())()())((((()((((()))()))(((())(((((((())()())()(())()()()(((())))())(()))()(()()))))))))(()(()))()))(()))))") == false);
    assert (correct_bracketing("(()(())(()()((((())))())((()))()(())((") == false);
    assert (correct_bracketing("()(())((())(())())(()))()((()()(())(()()(((())))())(()))()(()()))))())(()))()(((((()))()))(((((") == false);
    assert (correct_bracketing("(()((((((((())()())))(()(((()(()))()))(()))()))((()))()))())))(((((((())()())))(()(()))()))(()((((((())()()((()(()(((()(()(") == false);
    assert (correct_bracketing("()(((()(()((((((((())()()))))(()((())())))(()))))()))))") == false);
    assert (correct_bracketing(")(((((())()())))))))(") == false);
    assert (correct_bracketing("())(())()(()))))))))))()") == false);
    assert (correct_bracketing("(((((((())(((((((((())()())((())((())())((((()))))))))))()()(()(()(()())())())((()(()))()))(()))))))))))))()())))))))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing("((()()()((()(()(())())()))()(()((())(())())(())(())())((((())))))))((())()(()(())))()((((()(()(())())()))))()()(()(()(()(())())())(())))){ tests_passed++; } total_tests++;
))") == false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
(()))()())(()(()(((((((())()())))))))))())(())())(()))()()))(()(()(())((())())(()") == false);
    if((correct_bracketing("((((((()))))()())((())(())())((((())))))))){ tests_passed++; } total_tests++;
)))()))())(()))()())(()())(())())())()(()(())())())(()((((((())()())))(()(((()(()))()))(()))()))(()))") == false);
    if((correct_bracketing("())(()(((((((())()()))))()(()))))(((((())()())))))){ tests_passed++; } total_tests++;
)))())((((()))))))))))()") == false);
    if((correct_bracketing("()(())((()(()()())(()((((()(())())()()(((())))())(()))(())") == false);
    assert (correct_bracketing("(())()") == true);
    assert (correct_bracketing("(()(())(()()(((())))())((()))()(())((((((()((((()))()))(((())((((((((((())))())(((()(())((()()(((()()((((((()(((()(()(())())()()(()))())()())))))))())(((((())()())((((()((((()))()))(((())(((((((())()())()(())()()()(((())))())(()))()(()()))))))))(()(()))()))(()))))()))()(())))))))") == false);
    assert (correct_bracketing("())(())((()(((()(()(())())())()(()()(((())))())(()))())(())(())(()))()())()") == false);
    assert (correct_bracketing("(()(())((()()(((()()((((((()(((()(()(())())()()(()))())()())))))))())(((((())()())((((()((((()))()))(((())(((((((())()(((())))())(()))()(()()))))))))(()(()))()))(()))))") == false);
    assert (correct_bracketing("())(())())((((()))))))))))))()((((()))()))()(") == false);
    assert (correct_bracketing("(())(())()((((((())((()((())(())())((((()))))))))))()()(()(()(()(())())())((())(()()(((())))())((()))()(())(()())))))((") == false);
    assert (correct_bracketing("((()(()((()()(()))(())()(((())))())(()(((()))))))))))()())(())())(())()()(())(())())(()))()()())(())())()())())())(") == false);
    assert (correct_bracketing("())(())((()(())(()()(((()))))())(()))())(())(()()((((()))(((((()))))()())((())(())())((((()))))))))))())){ tests_passed++; } total_tests++;
)())(()))()())(()())(())())())()(()(())())())(()(()))(()))(()))()())()") == false);
    if((correct_bracketing("(((()))()())(") == false);
    assert (correct_bracketing(")((((((())()())))(()(((()(()((((()((((()))()))(((())()()))))(())()(()))))))))(()((())(())())((((())))))))))){ tests_passed++; } total_tests++;
)()()(()(()(()(())())())((())(()()(((())))())((()))()(())(()()))(()") == false);
    if((correct_bracketing("())(())((()(((()(()(())())((())(())())(((((())()(()(())))((())))))))))))){ tests_passed++; } total_tests++;
()()(()(()(()(())())())(())()(()()(((())))())(()))())(())(())(()))()())()") == false);
    if((correct_bracketing("((())((())())((((()))))))())){ tests_passed++; } total_tests++;
))()()(()(()(()())())())(((()())()((((((())()())))))((") == false);
    if((correct_bracketing("((()()(((()(()(())())()))()(()(())))") == false);
    assert (correct_bracketing("(((((((())()())))))))(((((())()())))))))){ tests_passed++; } total_tests++;
(((((())()()))))))))") == false);
    if((correct_bracketing("())(())((()(())(()()(((()))))())(()))())){ tests_passed++; } total_tests++;
(())(()()((((()))(((((()))))()())((()((((((())()())))(()(((()(()))()))(()(((())()())(()(()((()(()((()(())()())()))(())))))())()))())(()))()())(()())(())())())()(()(())())())(()(()))(()))(()))()())()") == false);
    if((correct_bracketing("())())){ tests_passed++; } total_tests++;
))))))()()(()(()(()(())())()))(()") == false);
    if((correct_bracketing("((((((((((())()())))(()(((()(()))()))(()))()))(()))()))())))){ tests_passed++; } total_tests++;
(((((((())()())))(()(()))()))(()((((((())()()((()(()(((()(())())()())())())())())(((()(()(())())()))())((((())))))))))))(()(()))()))(())))(") == false);
    if((correct_bracketing("())(()()())(()))){ tests_passed++; } total_tests++;
()())(()(()(()())(())())(()))()())(()(()(())())())(())())())(()") == false);
    if((correct_bracketing("()(())(()()((((((((()))()))()())))())(((()))()))(((()))()(())(())())(()))()()())){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing(")(()(((") == false);
    assert (correct_bracketing("(())((()(()(((()(())())()())())())((())()((((((())((((((((()(((()(()(())())()()(()))())()()))))))))()))()))((") == false);
    assert (correct_bracketing("(((((((((()))()))))))") == false);
    assert (correct_bracketing("((())()(()(()))())))") == false);
    assert (correct_bracketing("((((()((((((())()())))(()(((()(()))()))(()))()))(()))()))())))(()()(((())())())(()))()(())(())())(()))()()())") == false);
    assert (correct_bracketing("(((()()(()(()((((((()((((((())()())))(()(((()(()))()))(()))()))(()))()))())))((()((((((())()())))))))()()))())((()(()(())())())())())())()()()") == true);
    assert (correct_bracketing(")()(") == false);
    assert (correct_bracketing("(((((())(()))))()()(()(()(()(())())())((())((((()))()))(((())()())))))(((((((())()())))))))") == false);
    assert (correct_bracketing(")((((((())()())))(()(((()(()((((()((((()))()))(((())()()))))(())()(()))))))))(()((())(())())((((()))))))))))()()(()(()(()(())())())((())(()()(((()))))())((()))()(()(()(())())()((((()())))())))(((())(()()))(()") == false);
    assert (correct_bracketing("()(()((()(((()(()(())())())())())()()") == false);
    assert (correct_bracketing("()(())))))))){ tests_passed++; } total_tests++;
)") == false);
    if((correct_bracketing("(((()((((()(()(())())()(()(()))()))(()(())(()()(((())))())((()))()(())((((()(()(())())())((((())()(()()())))") == false);
    assert (correct_bracketing("(((()))()))(((())()((()))))(") == false);
    assert (correct_bracketing("())(())())(()))(()") == false);
    assert (correct_bracketing("((()(()((()(())()") == false);
    assert (correct_bracketing("())(())())(())()") == false);
    assert (correct_bracketing("((()(()((()()(()))(())()(((())))())(()(((()))))))))))()())(())())(())()()(())(())())(()))()()())(())())()())())())()())){ tests_passed++; } total_tests++;
(") == false);
    if((correct_bracketing("(((((((())(())())((((()))))))))))()()(()(()(()(((()(()))()(()(()())())())(((())())()))))))){ tests_passed++; } total_tests++;
))((((((())()())))()))((())") == false);
    if((correct_bracketing("())(((((())))()())(())())(()))){ tests_passed++; } total_tests++;
()())(()()()(())())())(()((())())((((()))))()))))))()") == false);
    if((correct_bracketing("()((((()(()((())())()(()(()))()))(()(())(()()(((())))())((()))()(())((((()(()(())())())(((((") == false);
    assert (correct_bracketing("()(())(()()(()(()))))))()(()())") == false);
    assert (correct_bracketing("())(())((()(())(()()(((())))((()((((()(()(())()))())(())()())()") == false);
    assert (correct_bracketing("((()(()((()()(()))(())()(((())()(())))())(()(((()))))))))))()())(())())(())()()(())(())())(()))()()())(())())()())())())(") == false);
    assert (correct_bracketing("((()()((())()(()(()))())(((()(()(())())()))()(()(())))") == false);
    assert (correct_bracketing("((((())(())())((())(())())((((()))))))))))()()(()(()(()(())())())((((()))))))))){ tests_passed++; } total_tests++;
()(") == false);
    if((correct_bracketing("(())(())())(((((())()(()(())))(())))))){ tests_passed++; } total_tests++;
))))))()()((()(()(())(())())())((") == false);
    if((correct_bracketing("((())(())())(((((())()(()(())))(()))))))){ tests_passed++; } total_tests++;
)))))()()((()(()(()(())())())((") == false);
    if((correct_bracketing("(((()(())(()()(((())))()((((()((((()))()))(((())(((((((())()())()(())(((()(())(()()(((())))())((()))()(()))))))))))()(())((()") == false);
    assert (correct_bracketing("())())()()(((()(()(())())()()(())))(())((()()(((()))()(()))(())(()))()(()()))))))()(()(())(())(())()(()))))))))))){ tests_passed++; } total_tests++;
()))())(()") == false);
    if((correct_bracketing("((((())()(()(()((((((((((())()())))))))(()))())((()(()(())())())())())())))()())((())())(()))()())){ tests_passed++; } total_tests++;
(()(()(())())((()((") == false);
    if((correct_bracketing("((())((())())((((()))))))())){ tests_passed++; } total_tests++;
)()()()(()(()(()())())())(((()())()((((((())()())))))((") == false);
    if((correct_bracketing("(())(())())((((())))))){ tests_passed++; } total_tests++;
)))))()()(()(())(()(())())())(()(())(()()(((())))())(()))()((((()))())))(((())(((((((()))())") == false);
    if((correct_bracketing("()())(())(())())){ tests_passed++; } total_tests++;
(())()()))()") == false);
    if((correct_bracketing("(())(())())((((())))))){ tests_passed++; } total_tests++;
)))))()()(()(()(()(())()((((())))))))())()(()((()(()(())()))()())((((())))()())(())())(()))()())(()(()(())())(())(()(()))())(((((()))())") == false);
    if((correct_bracketing("((()(((()(()(())()))(((((())()())))(()(())(())())(()))()())()()(()(()))(())(())())((((()))))))))){ tests_passed++; } total_tests++;
))))())))(()") == false);
    if((correct_bracketing("())(())(()()(((())))))){ tests_passed++; } total_tests++;
)()((()())") == false);
    if((correct_bracketing("()(())((()(()(()(((()(())())()()((((())))())(()))()(()())") == false);
    assert (correct_bracketing("(((()(())(()()(((())))()((((()((((()))()))(((())(((((((())()())()(())(((()(())(()()(((())))())(((()))()(()))))))))))()(())((()") == false);
    assert (correct_bracketing("((((())))))))())()(()((()(()(())()))()()))") == false);
    assert (correct_bracketing("(((((((())()()))))(((((())()()))))))))))") == false);
    assert (correct_bracketing("(()(((()()(((()(()(())())()))()(()(()))))(())(())())(((((())()))))))))()()(()(()(()(())())())((())(()()(((())))())((()))()(())((") == false);
    assert (correct_bracketing("(()(())(()()(((())))())(()))(((()()(((()(()(())())()))()(()(())))))(())((") == false);
    assert (correct_bracketing("(())((()(()(((()(())())()())())())((())()((((((())((((((((()(((()(()(())())()()(()))())()()))))))))())))))((") == false);
    assert (correct_bracketing("(((()))())(((()(()))()))(()(())(()()(((())))()()((()))()(())(((((((())()()))))))))(((())()(()(()))))(") == false);
    assert (correct_bracketing("(((((((()((((((())()())))(()(((()(()((((()((((()))()))(((())()()))))(())()(()))))))))(()((())(())())((((()))))))))))()()(()(()(()(())())())((())(()()(((())))())((()))()(())(()()))(()))()()))))))))") == false);
    assert (correct_bracketing("()(((()(())(()()(()(())())()(()(()(())())())") == false);
    assert (correct_bracketing("())(())((()(((()(()(())())())()(()()(((())))())(()))())(())(())(()))()()))") == false);
    assert (correct_bracketing("((((((((((())()())))(()(((()(()))()))(()))()))(()))()))())))(((((((())()())))(()(()))()))((()((((((())()()((()(()(((()(())())()())())())())())(())())((((())))))))))))(()(()))()))(())))(") == false);
    assert (correct_bracketing("()(())()())") == false);
    assert (correct_bracketing("((()(()(((((()((((()))()))(((())(((((((())()())()(())(((()(())(()()(((())))())((()))()(())))))))(()(())())(((((((())()()))((((((())()())))(()(((()(()))()))(()))()))(())())(())(())())((((()))))))))))()()(()(()(()(())()((((())))))))())()(()((()(()(())()))()())((((())))()())(())())(()))()())(()(()(())())(())(()(()))())(((((()))())(") == false);
    assert (correct_bracketing("()(()(()((((((()((((((())()())))(()((()((()(()(())())())())())())") == false);
    assert (correct_bracketing("((()(()((()()(()))(()()()(((())))())(()(((()))))))))))()())(())())(())(") == false);
    assert (correct_bracketing("(()(()())())()(((()))(()(())))(") == false);
    assert (correct_bracketing("(((((((((())()()))))()))(())))()())(()((((((((((()))()))(((())()()))))))))))") == false);
    assert (correct_bracketing("())(())())(())))") == false);
    assert (correct_bracketing("(((())(((()(())(()()(((())))())(())))()(())(())(())(()))()()())())())()())())())()((") == false);
    assert (correct_bracketing("())(())(((((()))()))(()())(())())())(())((()(())(()()(((())))((()((((()(()(())()))()(()(()(())())()))(())(()))()(())()((((())))))))))())()(()))()())(()(()(())())())(()") == false);
    assert (correct_bracketing("())(()))())((((()))))))))))") == false);
    assert (correct_bracketing("()(((((()(())((()(()(()(())((()()(((()()((((((()(((()(()(())())()()(()))())()())))))))())(((((())()())((((()((((()))()))(((())(((((((())()(((())))())(()))()(()()))))))))(()(()))()))(()))))(()(((()(())())()()(((())))())(()))()(()()))(()(())())()(()(()(())())())") == false);
    assert (correct_bracketing("()(())(()()()(((())))())(()))()(()())") == false);
    assert (correct_bracketing("(()(())(()()((((())))())(())))()((") == false);
    assert (correct_bracketing("(()((())(())())((((()))))))))))()()(()(()(()(())(())((()))()(())((") == false);
    assert (correct_bracketing("()(())((())(())())(()))()((()()(())(()()(((())))())(()))()(()()))))())(()))()(((()(()((()()(()))(())()(((())))())(()(((()))))))))))()())(())())(())()()(())(())())(()))()()())(())())()())())())(((((()))()))((") == false);
    assert (correct_bracketing("())())))))))()()(()(()(()(())(()(())(()()(((())))())((()))()(())(())(((((()))()))(()())(())())())(())((()(())(()()(((())))((()((((()(()(())()))()(()(()(())())()))(())(()))()(())()((((())))))))))))()(()))()())(()(()(())())())(()())((())())(()") == false);
    assert (correct_bracketing("())(())())(()(((((((())(((((((((())()())((())((())())((((()))))))))))()()(()(()(()())())())((()(()))()))(()))))))))))))()()))){ tests_passed++; } total_tests++;
))))))()") == false);
    if((correct_bracketing("(()(())(()()(((())))())(()))(((()()(((()(()(())())()))()(()(())))))()())((") == false);
    assert (correct_bracketing("()(())(()()(((())))())(()(()(())(()()(((())))())((()))()(())((((((()((((()))()))(((())(((((((())()())()(())(((()(())(()()(((())))())((()))()(()))))))))())()(()") == false);
    assert (correct_bracketing("(((()))())(((())()((()))))(") == false);
    assert (correct_bracketing("())(())())(()))()())(()(()(((((((()))()())))))))))())(())())(()((()))((((((((())(((((((((())()())(()(()))()))(()))))))))))))()())))))))())(()(()(())(())())(())())())(()") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("(())((()(()(((()(())())()())())())((())()((((((())((((((((()(((()(()(())()))()()(()))())()()))))))))()))()))((") == false);
    assert (correct_bracketing("())(())((()(())(()()(((())))((()((((()(()(((()(()(())())()()()())()") == false);
    assert (correct_bracketing("(((((()))())(((()(()))()))(()(())(()()(((())))()()((()))()(())(((((((())()())))))))(((())()(()(()))))()(()(())())())(") == false);
    assert (correct_bracketing("())(())((()(())(()()(((())))((()((((()(()(((()(()(())())(((())((())())((((()))))))())))()()(()(()(()())())())(((()())()((((((())()())))))(()()()())()") == false);
    assert (correct_bracketing("(((((((())()()))))(())(())(((((()))()))(()())(())())())(())((()(())(()()(((())))((()((((()(()(())()))()(()(()(())())()))(())(()))()(())()((((())))))))))())()(()))()())(()(()(())())())(()((((())()()))))))))))") == false);
    assert (correct_bracketing("())(())())((()(())((()(()(()(((()(())())()()(((())))())(())(())(())())()((((()(()(())())()(()(()(())())())(((((())()(()(())))(())))))))))))()()(()(()(()()())())())(()()(()())))") == false);
    assert (correct_bracketing("()(()((()(((()(()(())())())())()())(())())((((()))))))))))()") == false);
    assert (correct_bracketing("(((()((((()(()((()(())()))(()()(((())))())(()))()(())(()") == false);
    assert (correct_bracketing("()(())(()()()(()(()(()((((((((((())()())))))))(()))())((()(()(())())())())())())(())))())(()(()(())(()()(((())))())(()))()(())(())()(()())") == false);
    assert (correct_bracketing("()(()(()(((()(()(())())())())())()(((()(()((((((((())()()))))(()((())())))(()))))()))))())") == true);
    assert (correct_bracketing("(((((((())(((((((((())()())(()((((()(())(()()(((())))())(()))()(())(()()))()))(()()()))))))") == false);
    assert (correct_bracketing("((((()((((()))()))(((())()())))())(((((((())()())))))))") == false);
    assert (correct_bracketing("())()((((()))())((()(())((()()(((())))())(())))()(()())())()(()(())))(()())") == false);
    assert (correct_bracketing("(())(())())((((())))))))))))(()(()())())())(((((()))()))") == false);
    assert (correct_bracketing("((((((((((((())()())))(()(()))()))(()(()))()))(()(())(()()(((())())(())())((((()))))))))))))()))())((()))(((()()))())))(()()(())((((())(())())()((((()(()(())())()(()(()(())())())(((((()))()(()(())))(())))))))))))()()(()(()()())(()(())())())(((()))") == false);
    assert (correct_bracketing("(((())(())())((())(())())((((()))))))))))()()(()(()(()(()))())())((((()))))))))()))))))))") == false);
    assert (correct_bracketing("()()())(()()(((())))())()(()())") == false);
    assert (correct_bracketing("()())(())(()(((()))()))(()())(())())((((()))))))))){ tests_passed++; } total_tests++;
)))()(()))()())(()(()(())())())(())(((((()))()))(()())(())())((((())))))))))))()(()))()())(()(()(())())())(()") == false);
    if((correct_bracketing("(())(())())()((((()(()(())())()(()(()(()(())((())(())())(()))()((()()(())(()()(((())))())(()))()(()()))))())(()))()(((((()))()))(((())())())(((((()))()(()(())))(())))))))){ tests_passed++; } total_tests++;
))))()()(()(()(()(())())())((") == false);
    if((correct_bracketing("((((())()(()(()((((((((((())()())))))))(()))())((()(()(())())())())())())))()())((())())(()))((((())())(()(()(())())((()((") == false);
    assert (correct_bracketing("()(())((()(()(()(((()((((((()((((((())()())))(()(((()(()))()))(()))()))(()))()))())))(()()(((())))())(()))()(())(())())(()))()()())))())()()((((())))())(()))()(()())") == false);
    assert (correct_bracketing("(())(())())()((((()(()(())())()(()(()(())())())(((((()))()(()(())))(())))))))))))()()(()(()(()())()))))){ tests_passed++; } total_tests++;
))()(()(())())())(()))())())((") == false);
    if((correct_bracketing(")(((()(()))())))){ tests_passed++; } total_tests++;
((") == false);
    if((correct_bracketing("())(()()())(()))){ tests_passed++; } total_tests++;
()())(()(()(()())(())())(()))()())(()(()(())())())(())") == false);
    if((correct_bracketing("(((((())(()))))()()(()(()(())(())())())((())((((()))()))(((())()())())))(((((((())()())))))))")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("())(())((()(((()(()(())())((())(())())(((((())()(()(())))((())))))))))))){ tests_passed++; } total_tests++;
()()(()(()(()(())())())(())()(()()(((())))())()((((()(()(())())()(()(()(())())())((((((()))())(())(())(()))()())()") == false);
    if((correct_bracketing("())(())())){ tests_passed++; } total_tests++;
((())(())())((((())))))))))))()()(()(()(()(())())())((((()))))))))()") == false);
    if((correct_bracketing("(((((((())(((()))())(((()(()))()))(()(())(()()(((())))()()((()))()(())(((((((())()())))))))(((())()(()(()))))(()()))))))))") == true)){ tests_passed++; } total_tests++;

    if((correct_bracketing("()((()((((()(()(())())()(()())(())())(()))()())(()()((()())(()()(((())))())(())))()(()())(()(())())())(()(()(())())())(()(())") == false);
    assert (correct_bracketing("((((()))))))(()((())(())())((((()))))))))){ tests_passed++; } total_tests++;
))()()(()(()(()(())(())((()))()(())(()())()(()((()(()(()))") == false);
    if((correct_bracketing("((((()((((()))()))(((())(((((((()())(())())(())(())())((((()))))))))))()()(()(()(()(())())())(())()(((())))())((()))()(())))))))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing("((()(()((()()(()))(())()(((())))())(()(((())))))))))){ tests_passed++; } total_tests++;
)()())(())())(())()()(())(())())()())())(") == false);
    if((correct_bracketing("()(())((())(())())()(())(()()(((())))())(()))()(()()))){ tests_passed++; } total_tests++;
))())(()))()(((((()))()))((") == false);
    if((correct_bracketing("((()(()((()()(())()(())(()()(((())))())(())))()(())((((((((((()))()))(((())()()))))))())())(()))()()()))(())()(((())))())(()(((())))))){ tests_passed++; } total_tests++;
)))))()())(())())(())(") == false);
    if((correct_bracketing("(()(()(())())()((((()())())(())()(()))))))){ tests_passed++; } total_tests++;
))))())())))((") == false);
    if((correct_bracketing("((()()))()))){ tests_passed++; } total_tests++;
)((") == false);
    if((correct_bracketing("((((()(())()())))(()(((()(())(()((())(())())((((())())))))))()()(()(()(()(())())())(()()))))))){ tests_passed++; } total_tests++;
))))()()(()(()(()(())())())((())(()()(((())))())((()))()(())(()()))(()") == false);
    if((correct_bracketing("()(())(()()(((())))())(())))){ tests_passed++; } total_tests++;
()(())(()()())") == false);
    if((correct_bracketing("(()(())((()()(((()()((((((()(((()(()(())())()()(()))())()())))))))())(((((((())()())))(()(()))()))(()))((((())()())((((()((((()))()))(((())(((((((())()())()(())(()()(((())))())(()))()(()()))))))))(()(()))()))(()))))") == false);
    assert (correct_bracketing("((()(()((()()(()))(())()(((())()(())))())(()(((()))))))))))()())(())())(())()()(())(())())(()))){ tests_passed++; } total_tests++;
()()())(())())(") == false);
    if((correct_bracketing("()(())((())(())())(()))()((()()(())(()()(((())))())(()))()(()())))){ tests_passed++; } total_tests++;
)()()(((((()))()))(((((") == false);
    if((correct_bracketing("((()()))())(())())){ tests_passed++; } total_tests++;
()()())())())))((") == false);
    if((correct_bracketing("((((((())))))))())){ tests_passed++; } total_tests++;
()(()((()(()(()))((())))()())(())())(()))()())(()())(())())())()(()(())())())(()((") == false);
    if((correct_bracketing("((((()((((()))()))(((())((()(()(()(((()(()(())())())())())()(((()(()((((((((())()()))))(()((())())))(()))))()))))())(((((()())(())())(())(())())((((()))))))))))()()(()(()(()(())())())(())()(((())))())((()))()(())))))))){ tests_passed++; } total_tests++;
") == false);
    if((correct_bracketing("(()(())((()()(((()()((((((()(((()(()((())())()()(()))())()())))))))())(((((())()())((((()((((()))()))(((())(((((((())()())()(())(()()(((())))())(()))()(()()))))))))(()(()))()))(()))))") == false);
    assert (correct_bracketing("(()(()))())((") == false);
    assert (correct_bracketing("(((((((()((((((())()())))(()(((()(()((((()((((()))()))(((())()()))))(())()(()))))))))(()((())(())())((((()))))))))))()()(()(()(()(())())())((())(()()(((())))())((()))()(())(()()))(())))()()))))))))") == false);
    assert (correct_bracketing("(((()))())(((()((()()())(()(((((((((()))()))(((())()())))))))))))))))))){ tests_passed++; } total_tests++;
))(((())()(()(()))))(") == false);
    if((correct_bracketing("(((((((()(()(())()())))))))") == false);
    assert (correct_bracketing(")(()()))())){ tests_passed++; } total_tests++;
))((") == false);
    if((correct_bracketing("()(())((())(())())(()))()((()()(())(()()(((())()))()))(((((") == false);
    assert (correct_bracketing("(((((()(((())()()))))((((())))))))())()(()((()(()(()))()))(())))()())(()(((((((((()))()))(((())()()))))))))))") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("())(())((()(())(()()(((()))))())(()))())){ tests_passed++; } total_tests++;
(())(()()((((()))(((((()))))()())((())(()()())((((()))))))))))()))())(()))()())(()())(())())())()(()(())())())(()(()))(()))(()))()())()") == false);
    if((correct_bracketing("((()(()(())(())())()())())(") == false);
    assert (correct_bracketing("(()(())(())(())())()()())()(()()(((((())(())())(((((())()(()(())))((())))))))))))){ tests_passed++; } total_tests++;
()()(()(()(()(())())())(((()))))") == false);
    if((correct_bracketing("(((((((((((())()()()(())((())(())())(()))()((()()(())(()()(((())()))()))((((()))(()(()))()))(()))") == false);
    assert (correct_bracketing("((((((())()())))(()(((()(())(()((())(())())((((())))))))))))()()(()(()(()(())())())((())(()()(((())))())((())))()(())(()()))(()") == false);
    assert (correct_bracketing("(()(())(()()(((())))())((()))()(())((((((()((((()))()))(((())((((((((((())))())((()))()(())))))((((())))()())(())())(()))()())(()())(())())())()(()(())())())(()(())") == false);
    assert (correct_bracketing("((((((())()()(()(())(()))(())())((()))()(()())(()(()((((()(())())()())())())()))(()(()))()))(()))") == false);
    assert (correct_bracketing("((((((())()((((()((((()))()))(((())((()(())())))))(((((((())()())))))))()))))()))(()))") == true);
    assert (correct_bracketing("(()(()))()))(()(())(()()(((())())(())())((((()))))))))))))()))())((()))(((()()))())))(()()(())((()(((((()))()(()(())))(())))))))))))()()(()(()()())(()(())())())((") == false);
    assert (correct_bracketing("(((()()(()(()((((((()((((((())()())))(()(((()(()))()))(()))()))(()))()))())))((()((((((())()())))))))()()))())((()(()(())()))())())()()()") == false);
    assert (correct_bracketing("(((()((()(()(()(())())()(()(()))()))(()(())(()()(((())))())(())(())())(((((())()(()(()))()(())))))))))))()()(()(()(()(())())())((((()))()(())((((()(()(())())())((((())()(()()())))") == false);
    assert (correct_bracketing("((()(()((()()(()))(())()(((())()(())))())(()(((()))))))))))()())(())())(())()))(())())(()))){ tests_passed++; } total_tests++;
()()())(())())(") == false);
    if((correct_bracketing("((()()((())()(()(()))())(((()((((((()((((()))()))(((())((()(())())))))(((((((())()())))))))()))()(()(())))") == false);
    assert (correct_bracketing("((((())))))))())()(()((()(()(())()))()())((((())))()())(((()(()(((()(()))()))())(()))()())(()((())(())((()(())(()()(((())))())(()))())(())(())(()))()())())(())())())(()(())") == false);
    assert (correct_bracketing(")()()(()())())()(") == false);
    assert (correct_bracketing("())(") == false);
    assert (correct_bracketing(")()") == false)){ tests_passed++; } total_tests++;

    if((correct_bracketing("())")){ tests_passed++; } total_tests++;
== false);
    if((correct_bracketing("(((((()((()(()(())())()))))") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((()((()(()(())())())))))))))") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((()((()(()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("(((((()((()(()(())())(((((((()((()(()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())())))))))))((()))())(") == false);
    assert (correct_bracketing("()(())()()()(((())))())(()))()(()()))") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())()))))))))))((()))())(") == false);
    assert (correct_bracketing("((((((()((()(()(())(") == false);
    assert (correct_bracketing("(())(())())(()))()") == false);
    assert (correct_bracketing("())()(())(())))") == false);
    assert (correct_bracketing("(((((((((()((()(()(())())()(()(())))") == false);
    assert (correct_bracketing("((())()(((()(()(())())())(())))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(()))()(()())") == true);
    assert (correct_bracketing("((((((()((()(()(())())(((((((()((()(()(())())()))))))))))((()))())(") == false);
    assert (correct_bracketing("(((())(())())(()))()()(()(())))") == false);
    assert (correct_bracketing("())()(())(())))))(") == false);
    assert (correct_bracketing("())()(()))(())))") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())(") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())())))))))))(()()))())(") == false);
    assert (correct_bracketing("((((((())()(") == false);
    assert (correct_bracketing("(((((((((((()((()(()(())())((((((()((()(()(()((())()(()(()))))())))))))))()((()((())(") == false);
    assert (correct_bracketing("((((((()(((()(()(())())((((((()((()(()(())())()))))))))))((()))())(") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())())))))))))((()(") == false);
    assert (correct_bracketing("((((())()(()(()))))(())())(()))()") == false);
    assert (correct_bracketing("((((((())())()))))))") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()(()()()()(()(())())())))))))))(()()))())(") == false);
    assert (correct_bracketing("((((((()(()()(()(())(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()())") == false);
    assert (correct_bracketing("())()(()(())()()()(((())))())(()))()(()()))())(())))))(") == false);
    assert (correct_bracketing("())()(()(())()()()(((())()())))())(())))()(()()))())(())))))(") == false);
    assert (correct_bracketing("((())()(((()(()(()))()()())())(())))") == true);
    assert (correct_bracketing("((())(((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())()(((()(()(()))()()())())(())))") == false);
    assert (correct_bracketing("(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())()())()(()(())))") == false);
    assert (correct_bracketing("(())()(())(())))") == false);
    assert (correct_bracketing("(()(())(())())())") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((()((()())())(()(())()()()(((())))())(()))()(()()))())(())))))((()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())()))))))))))((()))())((())(((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())()(((()(()(()))()()())())(())))(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()((((((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))((((((()((()(()(())())((((((()((()(()(())())())))))))))(()()))())())") == false);
    assert (correct_bracketing("((((((())()))()))))))") == false);
    assert (correct_bracketing("(()))(())())(()))()") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())())))()))())(") == false);
    assert (correct_bracketing("(()(())(())((())()(())(())))))()") == false);
    assert (correct_bracketing("())()(()(())(())()(())(()))))()()(((())()())))())(())))()(()()))()))(())))())(") == false);
    assert (correct_bracketing("((((((()((((((((()((()(()(())())((((((()((()(()(())())())))))))))(()()))())()()(()(())(") == false);
    assert (correct_bracketing("(((((())(())())(()))()((()(()()(()(())(") == false);
    assert (correct_bracketing("((((((())())())))))))") == false);
    assert (correct_bracketing("(())()(())())))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))((()))(())())(()))()))(())))()(()())") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((()((()())())(()(())()()()(((())))())((()))()(()()))())(()))))))((()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("(((((((()((()(()(())())((((((()((()(()(())())()))))))))))((()))())((())(((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())()(((()(()(()))()()())())(())))(()(()(())())()") == false);
    assert (correct_bracketing("(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))(())()())()(()(())))") == false);
    assert (correct_bracketing("(())((((((()((()(()(())())(((((((()((()(()(()((())()(()(()))))()))))))))))") == false);
    assert (correct_bracketing("((((((())()))(()))))))") == false);
    assert (correct_bracketing("(()))(()((((((()((()(()(())())((((((()((()(()(())())()))))))))))((()))())()())(()))()") == false);
    assert (correct_bracketing("(((())(())())(()))()(()(())))") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())())))()))(())(") == false);
    assert (correct_bracketing("((((((()((()(()((((())()(()(())))))())((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(())))))))((()))())(") == false);
    assert (correct_bracketing("(())())))") == false);
    assert (correct_bracketing("((((((()((()(()(()))())((((((()((()(()(())())())))()))())(") == false);
    assert (correct_bracketing("(((((()((()(()(())()()()))))") == false);
    assert (correct_bracketing("())(())())((()))()") == false);
    assert (correct_bracketing("(((((((((((()((()(()(())())((((((()((()(()(()((())()(()(())((((((()((()(()(()))())((((((()((()(()(())())())))()))())()))())))))))))()(()((())(") == false);
    assert (correct_bracketing("(((((()((()(()()(())()()()))))") == false);
    assert (correct_bracketing("(((())(())())(()))((((((())())())))))))()()(()(())))") == false);
    assert (correct_bracketing(")()()((())))))))") == false);
    assert (correct_bracketing("(((((())(())())(()))((((((())())())))))))()()(()(())))(((()((()(()(())())((((((()((()(()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("(()(())(())((())()())()") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())()))))))))))((()(") == false);
    assert (correct_bracketing(")(((((((()((()(()(())())((((((()((()())())(()(())()()()(((())))())(()))()(()()))())(())))))((()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("((((())()(()(())))))(())())(()))()") == false);
    assert (correct_bracketing("))()()") == false);
    assert (correct_bracketing("(((())(())()))(()))()(()(())))") == false);
    assert (correct_bracketing("((((((((((())()())(())()))(()))()(()(())))") == false);
    assert (correct_bracketing("(())(())())((()))()())()(())") == false);
    assert (correct_bracketing("(((())(())())(()))(((((()())())())))))))()()(()(())))") == false);
    assert (correct_bracketing("())()(()))(((((((())()(())))") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((())()(((((((()((()(()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("((((((()(((()(()(())())((((((()((()(()(())())())))))))))(((((()((()(()(())())((((((()((()(()(()((())()(()(()))))()))))))))))((()))())(") == false);
    assert (correct_bracketing(")(((())()(())()))))") == false);
    assert (correct_bracketing("((((((())())())))))((((((())())())))))))") == false);
    assert (correct_bracketing("((())()(((()(()(())(((((((()((()(()()())())(((((((()((()(()(())())()))))))))))((()))())())(())))") == false);
    assert (correct_bracketing("((((((()((())(()(())()()()))))") == false);
    assert (correct_bracketing("(())(())())(()))((())((((((()((()(()(())())(((((((()((()(()(()((())()(()(()))))())))))))))))") == false);
    assert (correct_bracketing("((((())()(()(()))))(())())(()))((())))()") == false);
    assert (correct_bracketing("(())()))))") == false);
    assert (correct_bracketing("((((()()") == false);
    assert (correct_bracketing("((((((()(()())(()(())(") == false);
    assert (correct_bracketing("((((((()((()((()(())(()()(((())))())(()))()(()())())(())((())(()(())(())())())()())())(())(") == false);
    assert (correct_bracketing("((()((()((()))))))))") == false);
    assert (correct_bracketing("((((((()(((()(()(())())((((((()((()(()(())())()))))))))))((()))())())))(") == false);
    assert (correct_bracketing("))((())()(((()(()(()))()()())())(())))()()") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))((()))(())(()(())(())())()())(()))()))(())))()(()())") == false);
    assert (correct_bracketing("())()(()(())()()()(((())))())(()))()(()(((((((()((()(()(())())((((((()((()(()(())())())))()))(())()))())(())))))(") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((((()((()(()(())())()))))))))))((()))())(") == false);
    assert (correct_bracketing("((()((()((())))))()))") == false);
    assert (correct_bracketing("()(())))))))") == false);
    assert (correct_bracketing("(())())))())()(()(())()()()(((())))())(()))()(()()))())(())))))()") == false);
    assert (correct_bracketing("(((((((((((()((()(()(())())((((((()(((())()(((()(()(())(((((((()((()(()()())())(((((((()((()(()(())())()))))))))))((()))())())(())))(()(()(()((())()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())((()(()))))())))))))))()((()((())(") == false);
    assert (correct_bracketing("((())()(((()(()(())(((((((()((()(()()())())(((((((()((()(()()())())()))))))))))((()))())())(())))") == false);
    assert (correct_bracketing("((((((()(((()(()(())())((((((()((()(()(())())())))))))))(((((()((()(()(())())((((((()((()(()(()((())()(())(()))))()))))))))))(((()))())(") == false);
    assert (correct_bracketing("(((())(())())((((((((()((()(()((((())()(()(())))))())((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(())))))))((()))())()))()(()(())))") == false);
    assert (correct_bracketing("))(()((((((()((())(()(())()()()))))") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((())()()()()((((((()((()(()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("())()(()(())()()()(((())))())(()))()(()((())()(())(()))))))(())(())))))(") == false);
    assert (correct_bracketing("(((((((((()(((((((()((()(()(()))())((((((()((()(()(())())())))()))())((()(()(())())()(()(())))") == false);
    assert (correct_bracketing("(((((()((()(()((())())((((((()((()(()(())())))))))))))") == false);
    assert (correct_bracketing("((()()))))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()((((((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))((((((()((()(()(())())((((((()((()))((())()(((()(()(()))()()())())(())))()()()()))())())") == false);
    assert (correct_bracketing("((()((()((())))))))))") == false);
    assert (correct_bracketing("((((((()((()(()(()))())((((((((()((()(()(())())())))))))))))((()))())(") == false);
    assert (correct_bracketing("(((((((((()((()(()(())())((((((()((()(()(())())()))))))))))((()))())((((())()()))))))") == false);
    assert (correct_bracketing("((((((((())()()))))))))()))") == false);
    assert (correct_bracketing("((((((()((((((((()((()(()(())()))))))))(()()))())()()(()(())(") == false);
    assert (correct_bracketing("((())()(((()(()(((())(())())(()))((((((())())())))))))()()(()(()))))((()(()()())())()))))))))))((()))()))())(())))") == false);
    assert (correct_bracketing("(((())(())())(()))()()(()(())))((((((()((()(()(())())((((((()((()(()(())())())))()))(())(") == false);
    assert (correct_bracketing("(((((())(())())(()))((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("((((())()(()(()))))(())())(())()((())))()") == false);
    assert (correct_bracketing("((())()(((()())(())))") == false);
    assert (correct_bracketing("((((((())()(()(())()()()(((())))())(()))()(()((())()(())(()))))))(())(())))))((((((()((()(()(())())((((((()((()(()(()((())()(()(()))))())))))))))()((()((())(") == false);
    assert (correct_bracketing("((()(((()(((())()(())()))))(())(())())(()))((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((())()(()(()))))()))))))))))()(((()(()(())())())(())))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()((((((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))((((())()(())())))(((()((()(()(())())((((((()((()))((())()(((()(()(()))()()())())(())))()()()()))())())") == false);
    assert (correct_bracketing("((((((()((()(()(()))()(())(()()((()(()(())())()((())))((()))(())())(()))()))(())))()(()())((((((((()((()(()(())())())))))))))))((()))())(") == false);
    assert (correct_bracketing("((((((()((())(()(())()()()())))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(((((()((()(()(())()()()))))(()((((((((((()((()((((((()((()(()(())())))((((((()((()((()(())())())))))))))((()))())()())()(()(())))((((())()(())())))(((()((()(()(())())((((((()((()))((())()(((()(()(()))()()())())(())))()()()()))())())") == false);
    assert (correct_bracketing("(())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))())))))))))))") == false);
    assert (correct_bracketing("((((((()((()(()((((())()(()(())))))())((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(())))()()))))))((()))())(") == false);
    assert (correct_bracketing("((((((()(())))(()()))())(") == false);
    assert (correct_bracketing("(((((()())(()((((((()((())(()(())()()()))))(()(()()(())()()()))))") == false);
    assert (correct_bracketing("((((((()(()())(()((())(") == false);
    assert (correct_bracketing("((())()((((())))(()(()(())())())(())))") == true);
    assert (correct_bracketing("((((((()((()((((()((()((()))))))))))(())())((((((()((()(()(())())()))))))))))((()(") == false);
    assert (correct_bracketing("(((((()((()(()(())()()())))(((())(())()))(()))()(()(()))))") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())((((((()((()(()(())())((((((()((()(()(())())())))))))))(()()))())(())))))))))((()(") == false);
    assert (correct_bracketing("(()((((((())()(()(()))))(())())(()))((())))())(())())()") == false);
    assert (correct_bracketing("(((()))())(()())(") == false);
    assert (correct_bracketing("((((((()(((()(()(())())(((((((()((()(()(())())())))))))))(((((()((()(()(())())((((((()((()(()(()((())()(())(()))))()))))))))))(((()))())(") == false);
    assert (correct_bracketing("((()(((((((()((()(()(())())((((((()((()()(())())())))))))))(((()((()((()))))))))") == false);
    assert (correct_bracketing("(((((()((()(()(())()()())((((())()(()(()))))(())())(())()((())))())))") == false);
    assert (correct_bracketing("((((((()((()(()(()))())())))()))())(") == false);
    assert (correct_bracketing("((((())()(()((((()))())(()())(()))))(())())(())()((())))()") == true);
    assert (correct_bracketing("((((((()(((((())()(((()())(())))(((((()((()(()(())()))))))))(()()))())()()(()(())(") == false);
    assert (correct_bracketing("(((((((((()((()((((((()((()(()(())())((((((()((()(((()(())())())))))))))((()))())()())()(()(())))") == false);
    assert (correct_bracketing("((((((()((()(()(((((())()(()(())))))())((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(())))()()))))))(((())(())())(()))()()))())(") == false);
    assert (correct_bracketing("((((((())()))(()))))") == true);
    assert (correct_bracketing("((((((()((()(()(()))())(((())(") == false);
    assert (correct_bracketing("(((((((((()(((((((()((()(()(()))())((((((()((()(()((())())())))()))())((()(()(())())()(()(())))") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((())()()()()((((((()((()(()(()((())()(()(()))))()))))))))))((())()(((()(()(()))()()())())(())))()())") == false);
    assert (correct_bracketing("()(())(()()((()(()(())(((((((()((()(()(())())))((()))(())())(()))()))(())))()(()())") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())()))))))))))((())()(())(()()((()(()(())())()((())))())(())))()(()()))())(") == false);
    assert (correct_bracketing("(((((((((((()((()(()(())())((((((()(((())()(((()(()(())(((((((()((()(()()())())(((((((()((()(()(())())()))))))))))())())((()(()))))())))))))))()((()((())(") == false);
    assert (correct_bracketing("((((((()((()(()((((((()(()()(()(())((()())())())))()))())(") == false);
    assert (correct_bracketing("(((((())()(()(()))))(())())(()))()") == true);
    assert (correct_bracketing("(((())((((((((()((())(()(())()()()())))))())(()))(((((()())())())))))))()()(()(())))") == true);
    assert (correct_bracketing("((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()(()))())(((())()((()((()))))))))") == false);
    assert (correct_bracketing("((((((()(((((((()(()())(()((())((()((()(()((((((()((()(()((((())()(()(())))))())((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()((((()(((()(((())()(())()))))(())(())())(()))((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((())()(()(()))))()))))))))))()(((()(()(())())())(())))))))()()))))))((()))())()(()()(((())))())(()))()(()())())(())((())(()(())(())())())()())())(())(") == false);
    assert (correct_bracketing(")())()(()))(())))") == false);
    assert (correct_bracketing("()()(())(()()((()(()(())())()((())))())(())))()(()())(())))") == false);
    assert (correct_bracketing("(((((())))") == false);
    assert (correct_bracketing("(((()))((((((())()()))))))") == true);
    assert (correct_bracketing("(((((()((()(()(())(((((((()((()(()((((((()(()()(()(())((()())())())))()))())())(())))") == false);
    assert (correct_bracketing("((((((()(()())(((((())(())())(()))()()(()(()))))(())(") == false);
    assert (correct_bracketing("(((((()(()()(()((())())(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))(())()())()(()(())))())))))))))))") == false);
    assert (correct_bracketing("((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()(()))(((())(())())(()))((((((())())())))))))()()(()(())))())(((())()((()((()))))))))") == false);
    assert (correct_bracketing("((((((()((()(()((((())()(()(())))))())((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(()))))()()))))))((()))())(") == false);
    assert (correct_bracketing("(())(((((()))())())())(()))()") == false);
    assert (correct_bracketing("(()(())()(())(())))(())(())((())()())()") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()())()(())(())))))()((((((()((())(()(())()()()())))()(((()(()(()))()()())()((())()(((()())(()))))(())))()()()()))())())") == false);
    assert (correct_bracketing("()))(())())(()))(()") == false);
    assert (correct_bracketing("((((((()(()())((()(())(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()((((((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))()(((((()((()(()(())())((((((()((()(()(())())())))))))))(()()))())())") == false);
    assert (correct_bracketing("(((((())(())())(()))(((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((())()(()(()))))") == false);
    assert (correct_bracketing("(())(())())(()))((())((((((()((()(()(())())(((((((()(((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))())))))))))))") == false);
    assert (correct_bracketing("(()(())))))))") == false);
    assert (correct_bracketing("((((((()((()(()(()))()(())(()()((()(()(())())()((())))((()))(())())(()))()))(())))()(()())((((((((()(((()(()(())())())))))))))))((()))())(") == false);
    assert (correct_bracketing("(((((()((()(()()(())()()()))())") == false);
    assert (correct_bracketing("((((((()(((()(()(())())(((((((()((()(()(())())())))))))))(((((()((()(()(())()())()(()))(()))))((((((()((()(()(()((())()(())(()))))()))))))))))(((()))())(") == false);
    assert (correct_bracketing("(((((()((()(()(())()()())(((((((((((((()(((((((()((()(()(()))())((((((()((()(()((())())())))()))())((()(()(())())()(()(())))())()(()(()))))(())())(())()((())))())))") == false);
    assert (correct_bracketing("((((())((((((()((())(((((()))((((((())()())))))))(())()()()())))()(()(()))))(())())(()))()") == false);
    assert (correct_bracketing("((()((()((()())()(()(())()()()(((())))())(()))()(()(((((((()((()(()(())())((((((()((()(()(())())())))()))(())()))())(())))))()))))()))") == false);
    assert (correct_bracketing("(((((((((((()((()(()(())())((((((()((()((()(()((())()(()(()))))())))))))))()((()((())(") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()(()()()()(()(())())(()()))())(") == false);
    assert (correct_bracketing(")())()(())))(())))") == false);
    assert (correct_bracketing("((((((())())())))))())") == false);
    assert (correct_bracketing("(())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))())))))))))))((((((()((()(()((((((()(()()(()(())((()())())())))()))())(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()((((((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())((((((()((()(()(()))())((((((((()((()(()(())())())))))))))))((()))())()))))(()()))())())") == false);
    assert (correct_bracketing("(((())(())())(()))()()(()(())))((((((()((()(()(())())((((((()((()(()()())())())))()))(())(") == false);
    assert (correct_bracketing("(((())(())())(()))()()(()(())))((((((()((()(()(()())((((((()((()(()()())())())))()))(())(") == false);
    assert (correct_bracketing("()(()))(()(())(())())())))))))") == false);
    assert (correct_bracketing("))((())()(((()(()(()))()()())())(())))((((())(())())(()))()()(()(()))))()") == false);
    assert (correct_bracketing("((((((()(((()(()(())())((((((()((()(()(())())()))))))))))((())))(((())()(())()))))())(") == false);
    assert (correct_bracketing("((((((())()))(())))()(())(()()((()(()(())())()((())))((()))(())())(()))()))(())))()(()()))") == false);
    assert (correct_bracketing("())()(((())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))())))))))))))((((((()((()(()((((((()(()()(()(())((()())())())))()))())()(())(())()(())(()))))()()(((())()())))())(())))()(()()))()))(())))())(") == false);
    assert (correct_bracketing("(())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()(((((((((()((((((((()((()(()(())()))))))))(()()))())()()(()(())()(()(()((())()(()(()))))())))))))))))((((((()((()(()((((((()(()()(()(())((()())())())))()))())(") == false);
    assert (correct_bracketing("((((((()())()()()((((((()((()(()(())())((((((()((()())())(()(())()()()(((())))())((()))()(()()))())(()))))))((()(()((())()(()(()))))())))))))))))))") == false);
    assert (correct_bracketing("(((((()((()(()(())())(()))") == false);
    assert (correct_bracketing("(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))(())()())(())))") == false);
    assert (correct_bracketing("((())()(((()(()(((())(())())(()))((((((())())())))))))()()(()(()))))((()(((((((()((()(()(())(()()())())()))))))))))((()))()))())(())))") == false);
    assert (correct_bracketing("((())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()(((((((((()((((((((()((()(()(())()))))))))(()()))())()()(()(())()(()(()((())()(()(()))))())))))))))))((((((()((()(()((((((()(()()(()(())((()())())())))()))())((((((()((()(()(()))())((((((((()((()(()(())())())))))))))))((()))())(") == false);
    assert (correct_bracketing("(((((((((((()((()(()(())())((()(())(()()((()(()(())())()((())))())(())))()(()(((((((())((((((()((()((()(())())())))))))))((()))())()())()(()(())))()(((((()((()(()(())())((((((()((()(()(())())())))))))))(()()))())())((((()(((())()(((()(()(())(((((((()((()(()()())())(((((((()((()(()(())())()))))))))))((()))())())(())))(()(()(()((())()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())((()(()))))())))))))))()((()((())(") == false);
    assert (correct_bracketing("((((((()(((()((((((((((()(((((((()((()(()(()))())((((((()((()(()((())())())))()))())((()(()(())())()(()(())))()((((((((())()))(()))))))((((((()((()(()(()((())()(()(()))))()))))))))))((()))())(") == false);
    assert (correct_bracketing("(())(())())(()))(()())((((((()((()(()(())())(((((((()(((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))())))))))))))") == false);
    assert (correct_bracketing("((((((()((()(()((((((()(()()(()(())((()())())())))()))(") == false);
    assert (correct_bracketing("(()(()))(())())()") == false);
    assert (correct_bracketing("(((((((())())())))))((((((())())())))))))") == false);
    assert (correct_bracketing("((())()(((()(()(((())(())())((((((((()((()((((()((()((()))))))))))(())())((((((()((()(()(())())()))))))))))((()()))((((((())())())))))))()()(()(()))))((()(()()())())()))))))))))((()))()))())(())))") == false);
    assert (correct_bracketing("(())(((((((()((()(()(())())((((((()((()(()(())())())))()))(())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))())))))))))))((((((()((()(()((((((()(()()(()(())((()())())())))()))())(") == false);
    assert (correct_bracketing("((((((()((()(()((((((()(()()(()(())((()()()())())))()))(") == false);
    assert (correct_bracketing("((((((()(()))(()((((((())()(()(()))))(())())(()))((())))())(())())())(()()))()))(") == false);
    assert (correct_bracketing("(((((())(())())(()))(((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((())()(()(())))((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()(()))(((())(())())(()))((((((())())())))))))()()(()(())))())(((())()((()((())))))))))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((()))(((((()((()(()(())())((((((()((()(()(())())()))))))))))())(())))()(()((()(((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))()(((((()((()(()(())())((((((()((()(()(())())())))))))))(()()))())())") == false);
    assert (correct_bracketing("((((((()(((()(()(())())((((((()((()(()(())())))))))))((()))())())))(") == false);
    assert (correct_bracketing("((((((((())()(()((()((())))))()))") == false);
    assert (correct_bracketing("))(()((((((()((())(()()()()))))") == false);
    assert (correct_bracketing("()(()))(()(())((())())())))))))") == false);
    assert (correct_bracketing("((((((()((()())(()(((())(") == false);
    assert (correct_bracketing("((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()((()))())(((())()((()((()))))))))") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((())((()())())(()(())()()()(((())))())((()))()(()()))())(()))))))((()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("((((((()((()(()(())())(((((((()((()(()(())(((((((()((()(()(((((((()(()()(()(())((()())())())))()))())()))))))))))((()))())(") == false);
    assert (correct_bracketing("((((((()(((())(())())(()))()()(()(())))((((((()((()(()(())())((((((()((()(()()())())())))()))(())()()))()))))))") == false);
    assert (correct_bracketing("((())()(((()(()(())(((((((()((()(()()())())(((((((()((()(()()())())())))(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))(())()())()(()(()))))))))))((()))())())(())))") == false);
    assert (correct_bracketing("(((((())(())())(()))()((()(()(()(()(())(") == false);
    assert (correct_bracketing("(((((((()(()(()(())(((((()((()(()(())())(()))") == false);
    assert (correct_bracketing("((((((())()") == false);
    assert (correct_bracketing("(((((()((()(()(())((((((((()((()(()(())())((((((()((()(()(())())((((((()(((()(()(())())((((((()((()(()(())())()))))))))))((())))(((())()(())()))))())(((()())()()())))()))())())(())))") == false);
    assert (correct_bracketing("(((((((()((()(()(())())(((((((()((()(()(())())()))))))))))((()))())()(()))(()(())(())())())))))))") == false);
    assert (correct_bracketing("((()(((()(()(())(") == false);
    assert (correct_bracketing("((((((()(((()(()(())())(((((((()((()(()(())())())))))))))(((((()((()(()(())())((((((()((()(())(()))))()))))))))))(((()))())(") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()(((()(()(())())())))))))))((()(") == false);
    assert (correct_bracketing("()(()))(()(()()((())())())))))))") == false);
    assert (correct_bracketing("))((())()(((()(()((((())()(((()(()(())())())(()))))))()()())())(())))((((())(())())(()))()()(()(()))))()") == false);
    assert (correct_bracketing("(()((()))((((((()((()(()(())()()())((((())()(()(()))))(())())(())()((())))())))())())()") == false);
    assert (correct_bracketing("(()(())()(())(())))(())(())((())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()(((((((((()((((((((()((()(()(())()))))))))(()()))())()()(()(())()(()(()((())()(()(()))))())))))))))))((((((()((()(()((((((()(()()(()(())((()())())())))()))())((())()())()") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())()))))))))))(((())()(())(()()((()(()(())())()((())))())(())))()(()()))())(") == false);
    assert (correct_bracketing("(((((((()(()(()(())(((((()((()(()(())((((((()((()(()(())())(((((((()((()(()(())(((((((()((()(()(((((((()(()()(()(())((()())())())))()))())()))))))))))((()())())(())(()))") == false);
    assert (correct_bracketing("((((((((()((()(()(())())()))))))()))))") == true);
    assert (correct_bracketing("(((((((((((()((()(()(())())((((((()((()()((())()(()(()))))())))))))))()((()((()(())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))()))))))))))))(") == false);
    assert (correct_bracketing("()(()))(()(())()((())())())))))))") == false);
    assert (correct_bracketing("((((((()((()((()(((((())()(()(())))))())((((((())((()(()(())())()))))))(((((((((()(((()(()(())())()(()(())))()()))))))(((())(())())(()))()()))())(") == false);
    assert (correct_bracketing("())()(()))((((()((())()(())))") == false);
    assert (correct_bracketing("(((((((((()(((((((()((()(()(()))())((((((()((()(()((()))())())))()))())((()(()(())())()(()(())))") == false);
    assert (correct_bracketing("))()(())()(((()(()((((())()(((())()(((()(()(())(((((((()((()(()()())())(((((((()((()(()()())())())))(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))(())()())()(()(()))))))))))((()))())())(())))((()(()(())())())(()))))))()()())())(())))((((())(())())(()))()()(()(()))))()") == false);
    assert (correct_bracketing("(())(((((()))())())(())(()))()") == true);
    assert (correct_bracketing("(((((((((()(((((((()((()(()(()))())((((((()((()(()((())())())))()))())((())()(())()(((()(()((((())()(((())()(((()(()(())(((((((()((()(()()())())(((((((()((()(()()())())())))(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))(())()())()(()(()))))))))))((()))())())(())))((()(()(())())())(()))))))()()())())(())))((((())(())())(()))()()(()(()))))())(()(())())()(()(())))") == false);
    assert (correct_bracketing("(()(())(())())()((((())()(()(()))))(())())(()))((())))()") == false);
    assert (correct_bracketing("()(())))))))((())()(((()(()(((())(())())(()))((((((())())())))))))()()(()(()))))((()(()()())())()))))))))))((()))()))())(())))") == false);
    assert (correct_bracketing(")((((((())())())))))") == false);
    assert (correct_bracketing("((())()(((()(()(((())(())())(()))((((((())())())))))))()()(()(()))))((((((())(())())(()))(((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((())()(()(()))))(()(()()())())()))))))))))((()))()))())(())))") == false);
    assert (correct_bracketing("((((((()((()(()(()(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())()())()(()(())))))())())))()))())(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(((((((()((()(()((((((()(()()(()(())((()()()())())))()))(()())") == false);
    assert (correct_bracketing("((((((())((()(()(()(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())()())()(()(())))))())())))()))())(") == false);
    assert (correct_bracketing("((())())(((()(()((()((()))()))())(())))") == false);
    assert (correct_bracketing("((((((((())()))))((((()((()(()(())())((((((()((()(()(()((())()(()(())((((((()((()(()(()))())((((((()((()(()(())())())))()()))())))))))))()(()((())(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()((((((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))((((((()((()(()(())())((((((()((()))((())()(((()(()(()))()()())())(())))()()()())))())())") == false);
    assert (correct_bracketing("()(())))(()(())(())())())))))))") == false);
    assert (correct_bracketing("(((((((((()((()((((((()((()(()((())())((((((()((()((()(())())())))))))))((()))())()())()(()(())))") == false);
    assert (correct_bracketing("())()(())(())()()()(((())))())(()))()(()()))())(())))))(") == false);
    assert (correct_bracketing("((((((())())())))()))") == false);
    assert (correct_bracketing("(((((()())((((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()((()))())(((())()((()((())))))))))((((((()((())(()(())()()()))))(()(()()(())()()()))))") == false);
    assert (correct_bracketing("((((((()(((((((()((()(()(())())((((((()((()(()(())())()))))))))))((()(()())(()(())(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((()))()((()))(())(()(())(())())()())(()))()))(())))()(()())") == false);
    assert (correct_bracketing("((((((((((((()((()(()(())())((((((())((()())())(()(())()()()(((())))())((()))()(()()))())(()))))))((()(()((())()(()(()))))()))))))))))(())))(()()))())(") == false);
    assert (correct_bracketing("(((())(())())((((((((()((()(()((((())()(()(())))))())(((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(())))))))((()))())()))()(()(())))") == false);
    assert (correct_bracketing("(((())(())())((((((((()((()(()((((())()(()(())))))())((((((())((((((((()((()(()(())()()())))(((())(())()))(()))()(()(()))))()))))))(((((((((()((()(()(())())()(()(())))))))((()))())()))()(()(())))") == false);
    assert (correct_bracketing("((())(((((((()((()(()(()))())((((((()((()(()(())())())))()))())()())(())))") == false);
    assert (correct_bracketing("())()(())())))(") == false);
    assert (correct_bracketing("(()(())(())()") == false);
    assert (correct_bracketing("(((((((((((()((()(()(())())((()(())(()()((()(()(())())()((())))())(())))()(()(((((((())((((((()((()((()(())())())))))))))((()))())()())()(()(())))()(((((()((()(()(())())((((((()((()(()(())())())))))))))(()()))())())((((()(((())()(((()(()(())(((((((()((()(()()())())(((((((()(((()(())())()))))))))())((()))())())(())))(()(()(()((())()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())((()(()))))()))))))))()((()((())(") == false);
    assert (correct_bracketing("((((((()((()(()(())())(((((((()((()(()(())())())))())(") == false);
    assert (correct_bracketing("((((((()((()(") == false);
    assert (correct_bracketing("((((((()((()(()(())(())())((()))()(") == false);
    assert (correct_bracketing("())()(())(())()()()(((()))(()((((((()((())(()(())()()())))))))())(()))()(()()))())(())))))(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()((((((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())((((((()((()(()(()))())((((((((()((()(()(())())())))))))))))((()))())()))))(())()))())())") == false);
    assert (correct_bracketing("(((((((()((()(()(())())(((((((()((()(()(())())()))))))))))((()))())()(()())(())())(()))()))())))))))") == false);
    assert (correct_bracketing("()(()))(((((()())((((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()((()))())(((())()((()((())))))))))((((((()((())(()(())()()()))))(()(()()(())()()())))))))))((())()(((()(()(((())(())())(()))((((((())())())))))))()()(()(()))))((()(()()())())()))))))))))((()))()))())(())))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()(((((((((())()(((()(()(((())(()))())(()))((((((())())())))))))()()(()(()))))((()(()())())())()))))))))))((()))()))())(())))(((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))((((())()(())())))(((()((()(()(())())((((((()((()))((())()(((()(()(()))()()())())(())))()()()()))())())") == false);
    assert (correct_bracketing("()(()))(()(())(())())()))))))))") == false);
    assert (correct_bracketing("((((((()((((((((()((()(()(())())((()(())(())((())()())()(((((()((()(()(())())())))))))))(()()))())()()(()(())(") == false);
    assert (correct_bracketing("((((((((((()((()((()(())(()()(((())))())(()))()(()())())(())((())(()(())(())())())()())())(())(((()(()()(()(())(") == false);
    assert (correct_bracketing(")(((((((()((()(()(())((((((((()((()(()(())())((((((()((()(()(())())((((((()(((()(()(())())((((((()((()(()(())())()))))))))))((())))(((())()(())()))))())(((()())(((((((())())())))())))()())))()))())())(())))") == false);
    assert (correct_bracketing("()(())()()()(((())))") == true);
    assert (correct_bracketing("))())()(()))(())))") == false);
    assert (correct_bracketing("((((((()(((())(())())(()))()()(()(())))((((((()((()(()(())())(((((((()()())())())))()))(())()()))()))))))") == false);
    assert (correct_bracketing("((((((()((()(()(())())(((((((()((()(()(())(())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))())))))))))))())()))))))))))((()))())(") == false);
    assert (correct_bracketing("((()(((((((()((()(()(())())((((((()((()()(())(())())))))))))((((((()(((()((()(()((()))())(((())()((()((()))))))))") == false);
    assert (correct_bracketing("))())()()()((())))))))))(())))") == false);
    assert (correct_bracketing("(((((((())") == false);
    assert (correct_bracketing("()(()))(((((()())((((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()((()))())(((())()((()((())))))))))((((((()((())(()(())()()()))))(()(()()(())()()())))))))))((())()(((()(()(((())(())())(()))(((((()()())())()))))))))))((()))()))())(())))") == false);
    assert (correct_bracketing("((((((())()))()))))))((((((())())()))))))") == false);
    assert (correct_bracketing("((()(((()(((())()(())()))))(())(())())(()))((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((()((((((()((())(()(())()()()))))())(())))") == false);
    assert (correct_bracketing("((((((()(((()(()(())())(((((((((()((()(()(()((())()(())(()))))(((()))())(") == false);
    assert (correct_bracketing("()(())(()()((()(()(())(((((((()((()(()(())())))((()))))())(()))()))(()((())(((((((()((()(()(()))())((((((()((()(()(())())())))()))())()())(())))))()(()())") == false);
    assert (correct_bracketing("())()(()))(()))))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(()())()(()())") == false);
    assert (correct_bracketing("()(()))(") == false);
    assert (correct_bracketing("((((())()(()(())))())()(()(())()()()(((())()())))())(())))()(()()))())(())))))()(())())(())()((())))()") == false);
    assert (correct_bracketing("((((((())())(())(((((()))())())(())(()))())()))))))") == false);
    assert (correct_bracketing("((()())))))") == false);
    assert (correct_bracketing("(((((((()((()(()(())())((((((())()()()()((((((()((()(()(()((())()(()(()))))()))))))))))((())()(((()(()(()))()()())())(())))()())()((()((()))))))))") == false);
    assert (correct_bracketing("())()(()))(())))))") == false);
    assert (correct_bracketing("((((((()((()(()((((())()(()(())))))())(((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(())))))))((()))())(") == false);
    assert (correct_bracketing("())()(())(())()()()((((()))(()((((((()((())(()(())()()())))))))())(()))()(()()))())(())))))(") == false);
    assert (correct_bracketing("))((())()(((()(()((((())()(((()(()(())())())(()))))))()()())())(())))((((())(())())(()))()()(()((((())(())())(()))()()(()(())))((((((()((()(()(())())((((((()((()(()(())())())))()))(())(()))))()") == false);
    assert (correct_bracketing("))((())()(((()(()((((())()(((()(()(())())())(()))))))()()())())(())))((((())(())())(()))()()(()((((())(())())(()))()()(()(())))(())())))()))(())(()))))()") == false);
    assert (correct_bracketing("((((((()((((((((()((()(()(()))()))))))))(()()))())()()(()(())(") == false);
    assert (correct_bracketing("()(()))(()(())((())())())))") == false);
    assert (correct_bracketing("())()(()(())(())()(())((()))))()()(((())()())))())(())))()(()()))()))(())))())(") == false);
    assert (correct_bracketing("(((((((((((()((()(()(())())((((((()((()(()(()((())()(()((((((((((((()((()(()(())())((((((()((()(()(()((())()(()(()))))())))))))))()((()((())(()())()(()))(())))))))))())))((())(") == false);
    assert (correct_bracketing("())()(((())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()((()(()(()((())()(()(()))))())))))))))))((((((()((()(()((((((()(()()(()(())((()())())())))()))())()(())(())))())(())))()(()()))()))(())))())(") == false);
    assert (correct_bracketing("(((())(())())(()))()()(()(())))((((((()((()(()(())())(((((((()((()(()()())())())))()))(())(") == false);
    assert (correct_bracketing("((((((()((()(()((((((()(()()(()(())((()((((((((((())()())(())()))(()))()(()(())))()()())())))()))(") == false);
    assert (correct_bracketing("(())(())())(()))((())((((((()((())(()(())())(((((((()((()(()(()((())()(()(()))))())))))))))))") == false);
    assert (correct_bracketing("((((((((((((()((((((((()((()(()(()))()))))))))(()()))())()()(()(())((()(()(()(())(((((()((()(()(())((((((()((()(()(())())(((((((()((()(()(())(((((((()((()(()(((((((()(()()(()(())((()(())())())))()))())()))))))))))((()())())(())(()))") == false);
    assert (correct_bracketing("((((((()((()(()(()))())((((((())))()))())(") == false);
    assert (correct_bracketing("(((((((())()(") == false);
    assert (correct_bracketing("((((((()(((())()(((()(()(((())(())())(()))((((((())())())))))))()()(()(()))))((()(((((((()((()(()(())(()()())())()))))))))))((()))()))())(())))(()(()(())(") == false);
    assert (correct_bracketing("(()(())(())())()((((())())(()))((())))()") == true);
    assert (correct_bracketing("((((((()((()(()((())())((((((()((()(()(())())()))))))((((((()((()(()((((())()(()(())))))())((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(())))))))((()))())()))((()))())(") == false);
    assert (correct_bracketing("(())())))())()(()(())()()()(((())))()))()(()()))())(())))))()") == false);
    assert (correct_bracketing("((((())()(()(())))())()(()(((((())()(()(()))))(())())(())()((())))()())()()()(((())()())))())(())))()(()()))())(())))))()(())())(())()((())))()") == false);
    assert (correct_bracketing("(((())(()))())((((((((()((()(()((((())()(()(())))))())(((((((())((()(()(())())()))))))(((((((((()((()(()(())())()(()(())))))))((()))())()))()(()(())))") == false);
    assert (correct_bracketing("()(())(()()((())()(())(())()()()(((())))())(()))()(()()))())(())))))(()(()(())())()((())))())(())))()(()())") == false);
    assert (correct_bracketing("((((((()(((()(()(())())(((((((((()((()(()(()((())()((((()))())(") == false);
    assert (correct_bracketing("((((((((((()((()((()(())(()()(((())))())(()))()(()())())(())(())(()(())(())())())()())()(((((((()(()(()(())(((((()((()(()(())((((((()((()(()(())())(((((((()((()(()(())(((((((()((()(()(((((((()(()()(()(())((()())())())))()))())()))))))))))((()())())(())(())))(())(((()(()()(()(())(") == false);
    assert (correct_bracketing("(((((((((()(((((((()((()(()(()))())((((((()((()(()(())())())))()))())((()(((()(((()(((())()(())()))))(())(())())(()))((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((()((((((()((())(()(())()()()))))())(())))()(())())()(()(())))") == false);
    assert (correct_bracketing("(((((((((()(((((((()((()(()(()))())((((((()((()(()(())())())))()))())((()(()(())())()()()(())))") == false);
    assert (correct_bracketing("(()(())(())())()((((())())(()))(((((())(())())(()))()()(()(())))((((((()((()(()(()()((((((()(((()(()(())())((((((()((()(()(())())()))))))))))((()))())(())())))()))(())(())))()") == false);
    assert (correct_bracketing("((((((()((()((()(())(()()(((())))())(()))()(()())()()())())(())(") == false);
    assert (correct_bracketing("(())(())())(()))((())((((((()((()(()(())())(((((((()((())(()(())()()()))))((((((()((()(()(()((())())(()(()))))())))))))))))") == false);
    assert (correct_bracketing("()(())(()((((((())(())())(()))((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((())()(()(()))))()))))))))))((()(()(())())()((())))())(())))()(()())") == false);
    assert (correct_bracketing("(((((()((()(()(())())(((((((()((()(()(()((())()(()((((((((())()))(()))))))))))))") == false);
    assert (correct_bracketing("(((())(())())(()))()()(()(())))((((((()((()(()(()())((((((()((()(((((((((((()((()((()(())(()()(((())))())(()))()(()())())(())(())(()(())(())())())()())()(((((((()(()(()(())(((((()((()(()(())((((((()((()(()(())())(((((((()((()(()(())(((((((()((()(()(((((((()(()()(()(())((()())())())))()))())()))))))))))((()())())(())(())))(())(((()(()()(()(())(()()())())())))()))(())(") == false);
    assert (correct_bracketing("(()(())()") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())()))(") == false);
    assert (correct_bracketing("()))()(())(())))") == false);
    assert (correct_bracketing("((((()))()(()(())))))(())())(()))()") == false);
    assert (correct_bracketing("(()(())(())(()") == false);
    assert (correct_bracketingfalse);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))(()(()))(()(())(())())()))))))))))(())))()(()())") == false);
    assert (correct_bracketing("(((((()))))))((()))(())()())()(()(())))())))))))))))") == false);
    assert (correct_bracketing("((((((()(()())((((((((()((()(()(())(((((((()((()(()((((((()(()()(()(())((()())())())))()))())())(())))((())(())())(()))()()(()(()))))(())(") == false);
    assert (correct_bracketing("(((((((()((()(()(())()()()))))") == false);
    assert (correct_bracketing("(()((((((()(((((())()(((()())(())))(((((()((()(()(())()))))))))(()()))())()()(()(())((())(())())())") == false);
    assert (correct_bracketing("((((((()((((((((()((()(()())()))))))))(()()))())()()(()(())(") == false);
    assert (correct_bracketing("((((((()((((((((()((()(()())()))))))))(()())))())()()(()(())(") == false);
    assert (correct_bracketing("(((((())(())())(()))(((((((())())())))))))()()(()(())))(((()(())(()((((((()((())(()()()()))))())(()(())())((((((()((()(()(()((())()(()(())))((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()(()))(((())(())())(()))((((((())())())))))))()()(()(())))())(((())()((()((())))))))))") == false);
    assert (correct_bracketing("(((((()))))))())()(())(())))))))))))))))") == false);
    assert (correct_bracketing("(((((()((()(()())))(((())(())()))(()))()(()(()))))") == false);
    assert (correct_bracketing("(((((()()") == false);
    assert (correct_bracketing("((((((()(((()(()(())())((((((()()(()(()(())())())))))))))(((((()((()(()(())())((((((()((()(()(()((())()(())(()))))()))))))))))(((()))())(") == false);
    assert (correct_bracketing("(()()())(())())()((((())())(()))((())))()") == false);
    assert (correct_bracketing("((((((()(((()(()(())())(((((((()))()(())(()))))((()(()(())())())))))))))(((((()((()(()(())())((((((()((()(()(()((())()(())(()))))()))))))))))(((()))())(") == false);
    assert (correct_bracketing("()(())(()()((()(())(())())()((())))(()(()))(()(())(())())()))))))))))(())))()(()())") == false);
    assert (correct_bracketing("()(())(()()((()((((()))))))))(())())()((())))())(())))()(()(((()((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))((((())()(())())))(((()((()(()(())())((((((()((()))((())()(((()(()(()))()()())())(())))()()()()))())())") == false);
    assert (correct_bracketingfalse);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())()))))))))))((())()((((()(()(())())()((())))())(())))()((())()(())(())))))()()))())(") == false);
    assert (correct_bracketing("((((((())())())))))(()(())(()))(())") == false);
    assert (correct_bracketing(")(((((((()((()(()(())((((((((()((()(()(())())((((((()((()(()(())())((((((()(((()(()(())())((((((()((()(()(())())()))))))))))((())))(((())()(())()))))())(((()())(((((((())())())))())))()())))()))())())())") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((())((()((()((((((())()(()(()))))(())())(()))((())))())(())())()))())(()(())()()()(((())))())((()))()(()()))())(()))))))((()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("((((((())))") == false);
    assert (correct_bracketing("()(())(()()((()(()(())())()((()))))())(()))()(()())") == false);
    assert (correct_bracketing("()(())(()()((()(()(())()()()((())))((()))(())(()(())(())())()())(()))()))(())))()(()())") == false);
    assert (correct_bracketing("((((((()(((())(())())(()))()()((()()())())())))()))(())()()))()))))))") == false);
    assert (correct_bracketing("(((((((((()((()(()(())())((((((()((()(()(())())()))))))))))((()))())((((())()())))))))") == false);
    assert (correct_bracketing("))((())()(((()(()((((())()(((()(()(())())())(()))))))()()())())(())))((((((((((()((()(()(()))())((((((((()((()(()(())())())))))))))))((()))())(())(())())(()))()()(()((((())(())())(()))()()(()(())))((((((()((()(()(())())((((((()((()(()(())())())))()))(())(()))))()") == false);
    assert (correct_bracketing("((((())())(()(())))))(())())(()))()") == false);
    assert (correct_bracketing("(((())(())())(()))()()(()(())))((((((()((()(()(())()))(((((((()((()(()()())())())))()))(())(") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()((()(())())())))())))())(") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())()(((((())(())())(()))(((((((())())())))))))()()(()(())))(((()((())(()(())())((((((()((()(()(()((())()(()(())))((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()(()))(((())(())())(()))((((((())())())))))))()()(()(())))())(((())()((()((()))))))))))))))))((()))())(") == false);
    assert (correct_bracketing("())()(()(())()()()(((())())())(()))()(()(((((((()()())(())))))(") == false);
    assert (correct_bracketing("())()(()(())()()()(((())))())(()))()(()(((((((()((()((((((((()((()((()(())())(()))())(())))))(") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()((()(())())())))))))((())()(((()(()((((())()(((()(()(())())())(()))))))()()())())(())))((((())(())())(()))()()(()((((())(())())(()))()()(()(())))((((((()((()(()(())())((((((()((()(()(())())())))()))(())(()))))()))))((()))())(") == false);
    assert (correct_bracketing("((((((()((()((()(())(()()(((())))())(()))()(()())()())())())(())(") == false);
    assert (correct_bracketing("((((((()((()(()(()))()(())(()(()((()(()(())())()((())))((()))(())())(()))()))(())))()(()())((((((((()((()(()()())())())))))))))))((()))())(") == false);
    assert (correct_bracketing("(((((()((()(()(())())((((((())((()((()((((((())()(()(()))))(())())(()))((())))())(())())()))())(()(())()()()(((())))())((()))()((()()))())(()))))))((()(()((())()(()(()))))())))))))))") == false);
    assert (correct_bracketing("((((((()((((((((()((()(()())()))))))())(()))())()()(()(())(") == false);
    assert (correct_bracketing("(((((((()((()(()(())())(((((((()((()(()(())())()))))))))))((()))(())()(()))(()(())(())())())))))))") == true);
    assert (correct_bracketing(")((()))))))))") == false);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())())))))))))((()))(((((((((()(((((((()((()(()(()))())((((((()((()(()(())())()))))((()(()(())())()()()(())))(") == false);
    assert (correct_bracketing("((((((((()((()(()(())())(((((((()((()(()(())())())))())(((((())()(") == false);
    assert (correct_bracketing("((())(((((((()((()(()(()))())((((((()((()(()(())())())))()))())()())((())))") == false);
    assert (correct_bracketing("(((())(())())(()))()()(()(())))((((((()((()(()(()())(((()))()))())()))))))))))((()(((((((())())())(())(())))(())(((()(()()(()(())(()()())())())))()))(())(") == false);
    assert (correct_bracketingfalse);
    assert (correct_bracketing("()(())(()()((()(()(())())()((())))())(())))()(()((((((((((()((()((((((()((()(()(())()))((((((()((()((()(())())())))))))))((()))())()())()(()(())))((((())()(())())))(((()((()(()(())())((((((()((()))((())()(((()(()((((((()(((()(()(())())((((((()((()(()(())())()))))))))))((()))())())))((()))()()())())(())))()()()()))())())") == false);
    assert (correct_bracketing("(((((()((()(()(())((((((((()((()(()(())())((((((()((()(()(())())()(((((()(((()(()(())())((((((()((()(()(())())()))))))))))((())))(((())()(())()))))())(((()())()()())))()))())())(())))") == false);
    assert (correct_bracketing("(()))(((((((()((()((()(())(()()(((())))())(()))()(()())()()())())(())(())())(()))()") == false);
    assert (correct_bracketing("((()(((())()())())))))))()()(()(()))))((()(((((((()((()(()(())(()()())())()))))))))))((()))()))())(())))(()(()(())())") == false);
    assert (correct_bracketing("(((((())(())())(()((())()(()(())))((()(((((((()((()(()(())())((((((()((()()(())())())))))))))((((((((((()((()(()(()))(((())(())())(()))((((((())())())))))))()()(()(())))())(((())()((()((())))))))))") == false);
    assert (correct_bracketingfalse);
    assert (correct_bracketing("((((((()((()(()(())())((((((()((()(()(())())()(((((((((()((()((((((()((()(()(())())((((((()((()((()(())())())))))))))((()))())()())()(()(()))))))))))))((()(") == false);
    assert (correct_bracketing("((((((()((((((()((()(()(())())((((((()((()(()(())())())))))))))((()())()(()(()))))(())())(()))((())))())(())())())(()()))()))(") == false);
    assert (correct_bracketing("())()(()())))") == false);

    auto __end = clock::now();
    time_taken_ms = std::chrono::duration_cast<std::chrono::milliseconds>(__end - __start).count();
    std::cout << "[TEST_SUMMARY] time_ms=" << time_taken_ms << " tests_passed=" << tests_passed << " total_tests=" << total_tests << std::endl;
})){ tests_passed++; } total_tests++;

